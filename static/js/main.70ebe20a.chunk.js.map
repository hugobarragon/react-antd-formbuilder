{"version":3,"sources":["QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/drawer.module.css","QuizzBuilder/reducer/reducer.ts","translations/TranslatedText.tsx","ToolBox/Components/TextInput.tsx","ToolBox/Components/HeaderText.tsx","ToolBox/Components/Label.tsx","ToolBox/Components/Divider.tsx","ToolBox/Components/Select.tsx","ToolBox/Components/Tags.tsx","ToolBox/Components/Checkboxes.tsx","ToolBox/Components/RadioButtons.tsx","ToolBox/Components/NumberInput.tsx","ToolBox/Components/MultiLineInput.tsx","ToolBox/Components/Rate.tsx","ToolBox/Components/DatePicker.tsx","ToolBox/CustomIcons/radiobuttonicon.tsx","ToolBox/CustomIcons/headericon.tsx","ToolBox/CustomIcons/inputIcon.tsx","ToolBox/CustomIcons/numberInputIcon.tsx","ToolBox/CustomIcons/multiLineInputIcon.tsx","ToolBox/index.tsx","QuizzContext.tsx","QuizzBuilder/ToolBoxContainer.tsx","QuizzBuilder/reducer/actions.ts","QuizzBuilder/FormPreview/DnDWrapper/index.tsx","QuizzBuilder/FormPreview/ElementWrapper/DeleteButton.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/EditButton.tsx","ReusableComponents/BottomButtons/index.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/CustomFormInput/QuillFormInput/AddDropdown.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/CustomFormInput/QuillFormInput/index.tsx","ReusableComponents/TextWithInfo.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/CustomFormInput/OptionsInput/AddInputOption.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/CustomFormInput/OptionsInput/OptionsInput.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/SettingsForm.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/index.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/index.tsx","QuizzBuilder/FormPreview/ElementWrapper/ElementWrapper.tsx","QuizzBuilder/FormPreview/FormPreview.tsx","QuizzBuilder/FormBuilder.tsx","customHooks.ts","Quiz/Quiz.tsx","index.tsx"],"names":["module","exports","mapClone","map","clonedeep","reducer","state","action","type","new_state","new_data","get","item","push","set","id","index","length","splice","newitem","element","Object","assign","newIndex","oldIndex","k","undefined","Error","validate","ISO6391","defaultMessages","en","memo","props","useContext","QuizzContext","messages","language","no_language_error","console","error","hasOwnProperty","translated_message","className","forwardRef","ref","form","inputData","required","questions","defaultValue","getFieldDecorator","FormItem","colon","label","dangerouslySetInnerHTML","__html","initialValue","rules","message","Input","SelectOption","Select","Option","options","option","value","style","whiteSpace","key","text","mode","CheckboxGroup","Checkbox","Group","autoSize","allowHalf","viewBox","width","height","fill","d","p-id","_defaultItems","pt","name","icon","component","headerIcon","field_name","Component","HeaderText","Label","Divider","Tags","Checkboxes","radioButtonIcon","RadioButtons","inputIcon","TextInput","numberInputIcon","NumberInput","multiLineInputIcon","MultiLineInput","Rate","DatePicker","getDefaultContext","toolBox","defaulttoolBox","createContext","ListItem","List","Item","ListItemMeta","Meta","dispatch","itemLayout","margin","dataSource","renderItem","onClick","elementOptions","uuidV4","addElement","onClickHandler","avatar","title","description","ItemTypes","moveCard","children","useRef","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","arrowPointAtCenter","placement","onConfirm","okText","cancelText","shape","onClose","onSubmit","span","textAlign","marginRight","MenuItem","Menu","getNativeName","ISO6391AllCodes","getAllCodes","onChange","disabled","menu","lang","includes","overlay","overlayClassName","styles","dropdownLanguages","TabPane","Tabs","Size","Quill","import","text_size","whitelist","register","modules","toolbar","container","header","font","size","color","background","list","indent","currentLanguage","setLanguage","onNewLanguage","onRemoveLanguage","questionLanguages","keys","onChangeHandler","content","preventPropagation","e","stopPropagation","preventDefault","activeKey","tabBarExtraContent","tab","theme","placeholder","onAdd","languagesList","existingOptions","useState","drawerVisibility","setDrawerVisibility","newOption","setNewOption","closeDrawer","onChangeInput","tempNewOption","target","visible","destroyOnClose","i","TextWithInfo","BottomButtons","newOptionValue","newOptionListText","values","valueClone","cloneDeep","AddInputOption","xs","sm","renderTabBar","onDelete","DrawerForm","setState","setFieldsValue","getFieldsValue","fieldsNames","listLanguages","this","layout","QuillFormInput","OptionsInput","valuePropName","PureComponent","Form","create","SettingsDrawer","showDrawer","toolboxData","formRef","settingsForm","overflowY","SettingsForm","wrappedComponentRef","justify","align","validateFields","err","setShowDrawer","EditButton","EditElement","DeleteButton","form_data","DndProvider","backend","HTML5Backend","current_key","found_toolbox_input","find","toolBoxInput","Empty","DnDWrapper","ElementWrapper","rest","useReducer","Map","initialState","contextValue","formData","previousFormData","useEffect","usePrevious","isEqual","Provider","order","FormPreview","Quizz","data","submitButton","htmlType","handleSubmit","bind","defaultProps","DevStart","formdata","setFormData","modalVisibility","setModalVisibility","onCancel","Quiz","log","ReactDOM","render","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,aAAe,6BAA6B,kBAAoB,oC,0hCCIlF,SAASC,EAASC,GAChB,OAAOC,IAAUD,GAQZ,SAASE,EAAQC,EAAeC,GACrC,OAAQA,EAAOC,MACb,IAAK,cACH,IAAMC,EAAYP,EAASI,GACzBI,EAAWD,EAAUE,IAAI,QACnBC,EAASL,EAATK,KAGR,OAFAF,EAASG,KAAKD,GAEPH,EAAUK,IAAI,OAAQJ,GAG/B,IAAK,iBAKH,IAJM,IAAAD,EAAYP,EAASI,GACzBI,EAAWD,EAAUE,IAAI,QACvBI,EAAOR,EAAPQ,GAEKC,EAAQ,EAAGA,EAAQN,EAASO,OAAQD,IAAS,CACpCN,EAASM,GACd,KAAWD,GAEpBL,EAASQ,OAAOF,EAAO,GAI3B,OAAOP,EAAUK,IAAI,OAAQJ,GAG/B,IAAK,gBAKH,IAJM,IAAAD,EAAYP,EAASI,GACzBI,EAAWD,EAAUE,IAAI,QACvBI,EAAgBR,EAAhBQ,GAAII,EAAYZ,EAAZY,QAECH,EAAQ,EAAGA,EAAQN,EAASO,OAAQD,IAAS,CACpD,IAAMI,EAAUV,EAASM,GACzB,GAAII,EAAO,KAAWL,EAAI,CAExBL,EAASM,GAASK,OAAOC,OAAOF,EAASD,GACzC,OAIJ,OAAOV,EAAUK,IAAI,OAAQJ,GAG/B,IAAK,eACH,IAAMD,EAAYP,EAASI,GACrBI,EAAWD,EAAUE,IAAI,QACvBY,EAAuBhB,EAAvBgB,SAAUC,EAAajB,EAAbiB,SAElB,GAAID,GAAYb,EAASO,OAEvB,IADA,IAAIQ,EAAIF,EAAWb,EAASO,OAAS,EAC9BQ,KACLf,EAASG,UAAKa,GAKlB,OAFAhB,EAASQ,OAAOK,EAAU,EAAGb,EAASQ,OAAOM,EAAU,GAAG,IAEnDf,EAAUK,IAAI,OAAQJ,GAG/B,QACE,MAAM,IAAIiB,MAAM,+B,qCCtEdC,EAAaC,IAAbD,SASKE,EAAkC,CAC7CC,GAAIA,GAoCSC,sBAjCf,SAAwBC,GAChB,IAAElB,EAAOkB,EAAPlB,GAAF,EACqBmB,qBAAWC,IAAlCC,EADE,EACFA,SAAUC,EADR,EACQA,SAGd,GAAwB,kBAAbA,IAA0BT,EAASS,GAAW,CACvD,IAAMC,EACJ,0DAEF,MADAC,QAAQC,MAAMF,GACRA,EAIR,GAAwB,kBAAbF,IAA0BA,EAASK,eAAeJ,GAAW,CAItE,MADAE,QAAQC,MADN,uHAIJ,IAAIE,EAAqB,GAEzB,GAAKN,EAASC,GAAUI,eAAe1B,GAMrC2B,EAAqBN,EAASC,GAAUtB,OANE,CAE1CwB,QAAQC,MADM,6CAEdE,EAAqB3B,EAMvB,OAAO,0BAAM4B,UAAU,cAAcD,M,+BC5CxBE,wBAAW,SAACX,EAAYY,GACrC,IAAQC,EAA8Bb,EAA9Ba,KAAMC,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACrBW,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,UAAWlC,EAAqBgC,EAArBhC,GAAImC,EAAiBH,EAAjBG,aACzBC,EAAsBL,EAAtBK,kBAEJ,OACE,kBAACC,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,wCAKpCc,EAAkBpC,EAAI,CACrB0C,aAAcP,EACdQ,MAAO,CACL,CACEV,WACAW,QAAS,oBALdR,CAQE,kBAACS,EAAA,EAAD,CAAOf,IAAKA,SCzBND,wBAAW,SAACX,EAAYY,GACrC,IAAQE,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACfY,EAAcF,EAAdE,UAEJ,OACE,kBAACG,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,wBACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,4CCV5BO,wBAAW,SAACX,EAAYY,GACrC,IAAQE,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACfY,EAAcF,EAAdE,UAEJ,OACE,kBAACG,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,4C,SCT5BO,wBAAW,WACxB,OACE,kBAACQ,EAAA,EAAD,CAAUC,OAAO,GACf,kBAAC,IAAD,U,QCHAQ,EAAeC,IAAOC,OAEbnB,wBAAW,SAACX,EAAYY,GACrC,IAAQC,EAA8Bb,EAA9Ba,KAAMC,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACrBW,EAAmDD,EAAnDC,SAAUC,EAAyCF,EAAzCE,UAAWC,EAA8BH,EAA9BG,aAAcnC,EAAgBgC,EAAhBhC,GAAIiD,EAAYjB,EAAZiB,QACvCb,EAAsBL,EAAtBK,kBAEJ,OACE,kBAACC,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,wCAKpCc,EAAkBpC,EAAI,CACrB0C,aAAcP,EACdQ,MAAO,CACL,CACEV,WACAW,QAAS,oBALdR,CASC,kBAAC,IAAD,KACGa,EAAQ7D,KAAI,SAAC8D,GACZ,OACE,kBAACJ,EAAD,CACEK,MAAOD,EAAOC,MAEdC,MAAO,CAAEC,WAAY,UACrBC,IAAKJ,EAAOC,OAEXD,EAAOK,KAAKjC,aCpCvBwB,EAAeC,IAAOC,OAEbnB,wBAAW,SAACX,EAAYY,GACrC,IAAQC,EAA8Bb,EAA9Ba,KAAMC,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACrBW,EAAmDD,EAAnDC,SAAUC,EAAyCF,EAAzCE,UAAWC,EAA8BH,EAA9BG,aAAcnC,EAAgBgC,EAAhBhC,GAAIiD,EAAYjB,EAAZiB,QACvCb,EAAsBL,EAAtBK,kBAEJ,OACE,kBAACC,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,wCAKpCc,EAAkBpC,EAAI,CACrB0C,aAAcP,EACdQ,MAAO,CACL,CACEV,WACAW,QAAS,oBALdR,CASC,kBAAC,IAAD,CAAQoB,KAAK,QACVP,EAAQ7D,KAAI,SAAC8D,GACZ,OACE,kBAAC,EAAD,CAAcC,MAAOD,EAAOC,MAAOG,IAAKJ,EAAOC,OAC5CD,EAAOK,KAAKjC,a,SC/BvBmC,EAAgBC,IAASC,MAEhB9B,wBAAW,SAACX,EAAYY,GACrC,IAAQC,EAA8Bb,EAA9Ba,KAAMC,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACrBW,EAAmDD,EAAnDC,SAAUC,EAAyCF,EAAzCE,UAAWC,EAA8BH,EAA9BG,aAAcnC,EAAgBgC,EAAhBhC,GAAIiD,EAAYjB,EAAZiB,QACvCb,EAAsBL,EAAtBK,kBAEJ,OACE,kBAACC,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,wCAKpCc,EAAkBpC,EAAI,CACrB0C,aAAcP,EACdQ,MAAO,CACL,CACEV,WACAW,QAAS,oBALdR,CASC,kBAACqB,EAAD,KACGR,EAAQ7D,KAAI,SAAC8D,GAAD,OACX,kBAAC,IAAD,CAAUC,MAAOD,EAAOC,MAAOG,IAAKJ,EAAOC,OACxCD,EAAOK,KAAKjC,a,kBC7BZO,wBAAW,SAACX,EAAYY,GACrC,IAAQC,EAA8Bb,EAA9Ba,KAAMC,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACrBW,EAAmDD,EAAnDC,SAAUC,EAAyCF,EAAzCE,UAAWC,EAA8BH,EAA9BG,aAAcnC,EAAgBgC,EAAhBhC,GAAIiD,EAAYjB,EAAZiB,QACvCb,EAAsBL,EAAtBK,kBAEJ,OACE,kBAACC,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,wCAKpCc,EAAkBpC,EAAI,CACrB0C,aAAcP,EACdQ,MAAO,CACL,CACEV,WACAW,QAAS,oBALdR,CASC,kBAAC,IAAD,KACGa,EAAQ7D,KAAI,SAAC8D,GAAD,OACX,kBAAC,IAAD,CACEI,IAAKJ,EAAOC,MACZA,MAAOD,EAAOC,MACdC,MAAO,CAELC,WAAY,WAGbH,EAAOK,KAAKjC,a,SCpCZO,wBAAW,SAACX,EAAYY,GACrC,IAAQC,EAA8Bb,EAA9Ba,KAAMC,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACrBW,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,UAAWlC,EAAqBgC,EAArBhC,GAAImC,EAAiBH,EAAjBG,aACzBC,EAAsBL,EAAtBK,kBAEJ,OACE,kBAACC,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,wCAKpCc,EAAkBpC,EAAI,CACrB0C,aAAcP,EACdQ,MAAO,CACL,CACEV,WACAW,QAAS,oBALdR,CAQE,kBAAC,IAAD,CAAaN,IAAKA,S,SCxBZD,wBAAW,SAACX,EAAYY,GACrC,IAAQC,EAA8Bb,EAA9Ba,KAAMC,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACrBW,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,UAAWlC,EAAqBgC,EAArBhC,GAAImC,EAAiBH,EAAjBG,aACzBC,EAAsBL,EAAtBK,kBAEJ,OACE,kBAACC,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,wCAKpCc,EAAkBpC,EAAI,CACrB0C,aAAcP,EACdQ,MAAO,CACL,CACEV,WACAW,QAAS,oBALdR,CAQE,kBAAC,IAAD,CAAeN,IAAKA,EAAK8B,UAAQ,S,SCxB3B/B,wBAAW,SAACX,EAAYY,GACrC,IAAQC,EAA8Bb,EAA9Ba,KAAMC,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACrBW,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,UAAWlC,EAAqBgC,EAArBhC,GAAImC,EAAiBH,EAAjBG,aACzBC,EAAsBL,EAAtBK,kBAEJ,OACE,kBAACC,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,wCAKpCc,EAAkBpC,EAAI,CACrB0C,aAAcP,EACdQ,MAAO,CACL,CACEV,WACAW,QAAS,oBALdR,CAQE,kBAAC,IAAD,CAAMN,IAAKA,EAAK+B,WAAS,S,SCxBnBhC,wBAAW,SAACX,EAAYY,GACrC,IAAQC,EAA8Bb,EAA9Ba,KAAMC,EAAwBd,EAAxBc,UAAWV,EAAaJ,EAAbI,SACrBW,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,UAAWlC,EAAqBgC,EAArBhC,GAAImC,EAAiBH,EAAjBG,aACzBC,EAAsBL,EAAtBK,kBAEJ,OACE,kBAACC,EAAA,EAAD,CACEC,OAAO,EACPC,MACE,2BACEC,wBAAyB,CACvBC,OAAQP,EAAUZ,IAAa,wCAKpCc,EAAkBpC,EAAI,CACrB0C,aAAcP,EACdQ,MAAO,CACL,CACEV,WACAW,QAAS,oBALdR,CAQE,kBAAC,IAAD,WC1BM,aACb,OACE,yBACE0B,QAAQ,gBACRC,MAAM,MACNC,OAAO,MACPC,KAAK,gBAEL,8BACE,2BAAOxE,KAAK,cAEd,0BACEyE,EAAE,2XACFC,OAAK,OACLF,KAAK,KAEP,0BACEC,EAAE,0pBACFC,OAAK,OACLF,KAAK,OCnBE,aACb,OACE,yBACEH,QAAQ,gBACRC,MAAM,MACNC,OAAO,MACPC,KAAK,gBAEL,8BACE,2BAAOxE,KAAK,cAEd,0BACEyE,EAAE,okEACFC,OAAK,OACLF,KAAK,OCdE,aACb,OACE,yBACEH,QAAQ,gBACRC,MAAM,MACNC,OAAO,MACPC,KAAK,gBAEL,8BACE,2BAAOxE,KAAK,cAEd,0BACEyE,EAAE,gPACFC,OAAK,OACLF,KAAK,OCdE,aACb,OACE,yBACEH,QAAQ,gBACRC,MAAM,MACNC,OAAO,MACPC,KAAK,gBAEL,8BACE,2BAAOxE,KAAK,cAEd,0BACEyE,EAAE,mxFACFC,OAAK,OACLF,KAAK,OCdE,aACb,OACE,yBACEH,QAAQ,gBACRC,MAAM,MACNC,OAAO,MACPC,KAAK,gBAEL,8BACE,2BAAOxE,KAAK,cAEd,0BACEyE,EAAE,kFACFC,OAAK,OACLF,KAAK,KAEP,0BACEC,EAAE,iFACFC,OAAK,OACLF,KAAK,KAEP,0BACEC,EAAE,4DACFC,OAAK,OACLF,KAAK,KAEP,0BACEC,EAAE,kFACFC,OAAK,OACLF,KAAK,KAEP,0BACEC,EAAE,mFACFC,OAAK,OACLF,KAAK,KAEP,0BACEC,EAAE,mFACFC,OAAK,OACLF,KAAK,KAEP,0BACEC,EAAE,kFACFC,OAAK,OACLF,KAAK,OCkIEG,OA1Jf,WAEE,IAAMlC,EAAY,CAChBlB,GAAI,oBACJqD,GAAI,sBAGApB,EAAU,CACd,CACEE,MAAO,IACPI,KAAK,eAAMrB,IAEb,CACEiB,MAAO,IACPI,KAAK,eAAMrB,KAIf,MAAO,CACL,CACEoB,IAAK,aACLgB,KAAM,0BACNpC,YAEAqC,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,UAAWC,KAGrBC,WAAY,eACZC,UAAWC,GAEb,CACEtB,IAAK,YACLgB,KAAM,qBACNpC,YAEAqC,KAAM,kBAAC,IAAD,CAAQA,KAAK,gBACnBG,WAAY,SACZC,UAAWE,GAEb,CACEvB,IAAK,UACLgB,KAAM,uBACNpC,YAEAqC,KAAM,kBAAC,IAAD,CAAQA,KAAK,SACnBG,WAAY,WACZC,UAAWG,GAEb,CACExB,IAAK,SACLgB,KAAM,sBACNpC,YACAe,UAEAsB,KAAM,kBAAC,IAAD,CAAQA,KAAK,gBACnBG,WAAY,UACZC,UAAW5B,GAEb,CACEO,IAAK,OACLgB,KAAM,oBACNpC,YACAe,UAEAsB,KAAM,kBAAC,IAAD,CAAQA,KAAK,SACnBG,WAAY,QACZC,UAAWI,GAEb,CACEzB,IAAK,aACLgB,KAAM,0BACNpC,YACAe,UAEAsB,KAAM,kBAAC,IAAD,CAAQA,KAAK,iBACnBG,WAAY,cACZC,UAAWK,GAEb,CACE1B,IAAK,eACLgB,KAAM,4BACNpC,YACAe,UAEAsB,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,UAAWS,KAGrBP,WAAY,gBACZC,UAAWO,GAEb,CACE5B,IAAK,YACLgB,KAAM,yBACNpC,YAEAqC,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,UAAWW,KAGrBT,WAAY,aACZC,UAAWS,GAEb,CACE9B,IAAK,cACLgB,KAAM,2BACNpC,YAEAqC,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,UAAWa,KAGrBX,WAAY,eACZC,UAAWW,GAEb,CACEhC,IAAK,iBACLgB,KAAM,8BACNpC,YAEAqC,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,UAAWe,KAGrBb,WAAY,kBACZC,UAAWa,GAEb,CACElC,IAAK,OACLgB,KAAM,oBACNpC,YAEAqC,KAAM,kBAAC,IAAD,CAAQA,KAAK,SACnBG,WAAY,QACZC,UAAWc,GAEb,CACEnC,IAAK,aACLgB,KAAM,0BACNpC,YAEAqC,KAAM,kBAAC,IAAD,CAAQA,KAAK,aACnBG,WAAY,cACZC,UAAWe,KCvJV,SAASC,GAAT,GAIqB,IAH1BtE,EAGyB,EAHzBA,SACAC,EAEyB,EAFzBA,SACAsE,EACyB,EADzBA,QAEA,MAAO,CACLvE,SAAUA,GAAYN,EACtBO,SAAUA,GAAY,KACtBsE,QAASA,GAAWC,MAKxB,IAIezE,GAJM0E,wBACnBH,GAAkB,K,+BC3BdI,GAAWC,KAAKC,KAChBC,GAAeF,KAAKC,KAAKE,KAUhB,cACb,MAA8BhF,qBAC5BC,IADMgF,EAAR,EAAQA,SAAUR,EAAlB,EAAkBA,QAmBlB,OACE,kBAAC,KAAD,CACES,WAAW,aACXjD,MAAO,CAAEkD,OAAQ,OACjBC,WAAYX,EACZY,WAAY,SAAC3G,GAAD,OACV,kBAACkG,GAAD,CAAUU,QAAS,kBArBzB,SAAwB5G,GACtB,IAAM6G,EAA6B,CACjC1G,GAAI2G,OACJtG,QAASR,EAAKyD,IACdrB,UAAU,EACVC,UAAWrC,EAAKqC,WAGdrC,EAAKoD,UACPyD,EAAc,QAAc7G,EAAKoD,SAGnCmD,ECnCsB,SAACvG,GACzB,MAAO,CACLJ,KAAM,cACNI,QDgCS+G,CAAWF,IASSG,CAAehH,KACtC,kBAACqG,GAAD,CACEY,OAAQjH,EAAK0E,KACbwC,MAAO,kBAAC,EAAD,CAAgB/G,GAAIH,EAAKyE,OAChC0C,YACEnH,EAAKmH,YAAc,kBAAC,EAAD,CAAgBhH,GAAIH,EAAKmH,cAAkB,Y,oBE7CtEC,GACE,OAeO,YAAC/F,GACd,IAAQlB,EAAkCkB,EAAlClB,GAAIC,EAA8BiB,EAA9BjB,MAAOiH,EAAuBhG,EAAvBgG,SAAUC,EAAajG,EAAbiG,SACvBrF,EAAMsF,iBAAuB,MACnC,EAAiBC,aAAQ,CACvBC,OAAQL,GACRM,MAFuB,SAEjB1H,EAAgB2H,GAA6B,IAAD,EAChD,GAAK1F,EAAI2F,QAAT,CAGA,IAAMC,EAAY7H,EAAKI,MACjB0H,EAAa1H,EAGnB,GAAIyH,IAAcC,EAAlB,CAKA,IAAMC,EAAiB,UAAG9F,EAAI2F,eAAP,aAAG,EAAaI,wBAGjCC,GACHF,EAAkBG,OAASH,EAAkBI,KAAO,EAMjDC,EAHeT,EAAQU,kBAGkBC,EAAIP,EAAkBI,IAOjEN,EAAYC,GAAcM,EAAeH,GAKzCJ,EAAYC,GAAcM,EAAeH,IAK7CZ,EAASQ,EAAWC,GAMpB9H,EAAKI,MAAQ0H,QAhDRS,EAAT,oBAoDA,EAA+BC,aAAQ,CACrCxI,KAAM,CAAEJ,KAAMwH,GAAgBjH,KAAIC,SAClCqI,QAAS,SAACd,GAAD,MAAmB,CAC1Be,WAAYf,EAAQe,iBAHxB,mBAOMC,EAPN,KAASD,WAOoB,EAAI,EAEjC,OADAE,EARA,MAQKL,EAAKtG,IAER,yBAAKA,IAAKA,EAAKsB,MAAO,CAAEoF,YACrBrB,I,6BC9EQ,YAACjG,GACd,IAAQkF,EAAajF,qBAAWC,IAAxBgF,SAER,OACE,kBAAC,KAAD,CACEsC,oBAAkB,EAClBC,UAAU,SACVC,UAAW,kBAAMxC,EFCd,CACL3G,KAAM,iBACNO,GEH0CkB,EAAMlB,MAC9C+G,MAAO,kBAAC,EAAD,CAAgB/G,GAAG,mBAC1B6I,OAAQ,kBAAC,EAAD,CAAgB7I,GAAG,YAC3B8I,WAAY,kBAAC,EAAD,CAAgB9I,GAAG,YAE/B,kBAAC,IAAD,CAAQP,KAAK,SAAS8E,KAAK,SAASwE,MAAM,aChBjC,YAAC7H,GACd,OAAO,kBAAC,IAAD,eAAQzB,KAAK,UAAU8E,KAAK,OAAOwE,MAAM,UAAa7H,K,UCAhD,YAACA,GACd,IAAQ8H,EAAsB9H,EAAtB8H,QAASC,EAAa/H,EAAb+H,SAEjB,OACE,kBAAC,IAAD,CACEC,KAAM,GACN9F,MAAO,CACL+F,UAAW,UAGb,kBAAC,IAAD,CAAQ1C,QAASuC,EAAS5F,MAAO,CAAEgG,YAAa,IAC9C,kBAAC,EAAD,CAAgBpJ,GAAG,gBAErB,kBAAC,IAAD,CAAQyG,QAASwC,EAAUxJ,KAAK,WAC9B,kBAAC,EAAD,CAAgBO,GAAG,gB,iJCdbqJ,GAAaC,KAAnBrD,KACAsD,GAA+BzI,IAA/ByI,cACFC,IAAkBC,EADe3I,IAAhB2I,eAqCRxI,uBA7Bf,SAAqBC,GACnB,IAAQwI,EAAuBxI,EAAvBwI,SAAUC,EAAazI,EAAbyI,SAQZC,EACJ,kBAAC,KAAD,CAAMnD,QAPR,YAA8C,IAAdoD,EAAa,EAAlBvG,IACrBoG,GACFA,EAASG,KAMRL,GAAgBpK,KAAI,SAAAyK,GAAI,OACvB,kBAACR,GAAD,CACE/F,IAAKuG,EACLF,WAAUA,GAAWA,EAASG,SAASD,IAEtCN,GAAcM,QAMvB,OACE,kBAAC,KAAD,CAAUE,QAASH,EAAMI,iBAAkBC,KAAOC,mBAChD,kBAAC,IAAD,CAAQ3F,KAAK,aC7BX4F,GAAYC,KAAZD,QACAZ,GAAkBzI,IAAlByI,cAEFc,GAAOC,SAAMC,OAAO,0BACpBC,GAAY,CAChB,MACA,MACA,MACA,MACA,OACA,SACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAEFH,GAAKI,UAAYD,GACjBF,SAAMI,SAASL,IAAM,GAErB,IAAMM,GAAU,CACdC,QAAS,CACPC,UAAW,CACT,CAAC,CAAEC,OAAQ,CAAC,EAAG,GAAG,IAAU,CAAEC,KAAM,IAAM,CAAEC,KAAMR,KAClD,CAAC,CAAES,MAAO,IAAM,CAAEC,WAAY,KAC9B,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CACE,CAAEC,KAAM,WACR,CAAEA,KAAM,UACR,CAAEC,OAAQ,MACV,CAAEA,OAAQ,OAEZ,CAAC,QACD,CAAC,YAKQvJ,yBAAW,SAACX,EAAYY,GACrC,IACEqB,EAOEjC,EAPFiC,MACAhB,EAMEjB,EANFiB,aACAuH,EAKExI,EALFwI,SACA2B,EAIEnK,EAJFmK,gBACAC,EAGEpK,EAHFoK,YACAC,EAEErK,EAFFqK,cACAC,EACEtK,EADFsK,iBAEIC,EAAmCnL,OAAOoL,KAAKvI,GAErD,SAASwI,EACPC,GAKAlC,EAAS,2BAAKvG,GAAN,mBAAckI,EAAkBO,KAG1C,SAASC,EAAmBC,GACtBA,IACFA,EAAEC,kBACFD,EAAEE,kBAGN,OACE,kBAAC,KAAD,CACElK,IAAKA,EACL4H,SAAU4B,EACVW,UAAWZ,EACXa,mBACE,kBAAC,GAAD,CAAavC,SAAU8B,EAAmB/B,SAAU6B,KAGrDE,EAAkBrM,KAAI,SAACyK,GAAD,OACrB,kBAACM,GAAD,CAEEgC,IACE,kBAAC,IAAD,KACE,kBAAC,KAAD,CAASpF,MAAO8C,GAAON,GAAcM,IADvC,OAGG4B,EAAkBvL,OAAS,EAC1B,kBAAC,KAAD,CACE6G,MAAO,kBAAC,EAAD,CAAgB/G,GAAG,mBAC1B6I,OAAQ,kBAAC,EAAD,CAAgB7I,GAAG,YAC3B8I,WAAY,kBAAC,EAAD,CAAgB9I,GAAG,WAC/B4I,UAAW,SAACkD,GACVD,EAAmBC,GACnBN,EAAiB3B,KAGnB,kBAAC,IAAD,CACEd,MAAM,SACNxE,KAAK,QACLyG,KAAK,QACLvE,QAASoF,KAGX,MAGRvI,IAAKuG,GAEL,kBAAC,KAAD,CACEuC,MAAM,OACNC,YAAY,YACZlK,aAAcA,EACdgB,MAAOA,EAAMkI,IAAoB,GACjC3B,SAAUiC,EACVhB,QAASA,a,SCrIN,eAA+B,IAA5BxD,EAA2B,EAA3BA,SAAUJ,EAAiB,EAAjBA,MAC1B,OACE,kBAAC,KAAD,CAASA,MAAOA,GAAS,SACvB,kBAAC,IAAD,CAAMtH,KAAK,cAAc2M,MAAM,YADjC,OAGE,8BAAOjF,K,UCELoC,GAAkBzI,IAAlByI,cAEO,eAAqD,IAAlD+C,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,gBACtC,EAAgDC,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAkCF,mBAAS,CAAElJ,KAAM,KAAnD,mBAAOqJ,EAAP,KAAkBC,EAAlB,KAQA,SAASC,IACPH,GAAoB,GAItB,SAASI,EACPjB,EACAxK,GAEA,IAAM0L,EAAa,eAAQJ,GAEvBtL,EACF0L,EAAa,KAAS1L,GAAYwK,EAAEmB,OAAO9J,MAE3C6J,EAAa,MAAYlB,EAAEmB,OAAO9J,MAEpC0J,EAAaG,GA4Bf,OACE,kBAAC,WAAD,KACE,kBAAC,KAAD,CAAQzI,KAAK,OAAOkC,QAnDxB,WACEkG,GAAoB,KAmDhB,kBAAC,EAAD,CAAgB3M,GAAG,aAErB,kBAAC,KAAD,CACE+G,MAAM,iBACNhD,MAAO,IACPiF,QAAS8D,EACTI,QAASR,EACTS,gBAAc,GAEd,kBAAC9K,EAAA,EAAD,CAAUE,MAAM,aACbgK,EAAcnN,KAAI,SAACkC,EAAkB8L,GACpC,OACE,kBAAC,WAAD,CAAU9J,IAAK8J,GACb,kBAACC,GAAD,CAActG,MAAOzF,GAClBiI,GAAcjI,IAEjB,kBAACuB,EAAA,EAAD,CAAO6G,SAAU,SAAAoC,GAAC,OAAIiB,EAAcjB,EAAGxK,WAK/C,kBAACe,EAAA,EAAD,CAAUE,MAAM,SACd,kBAACM,EAAA,EAAD,CAAO6G,SAAUqD,KAEnB,kBAACO,GAAD,CAAetE,QAAS8D,EAAa7D,SAnD3C,WAKE,IAJA,IAAMsE,EAAiBX,EAAS,MAC1BY,EAAoBlN,OAAOmN,OAAOb,EAAS,MAGxC3M,EAAQ,EAAGA,EAAQuM,EAAgBtM,OAAQD,IAAS,CAE3D,GAAIsN,IADuBf,EAAgBvM,GAAhB,MAGzB,OAAO2C,KAAQnB,MAAM,wBAIrB+L,EAAkBtN,SAAWqM,EAAcrM,QAE7CoM,EAAMM,GAENE,KAGAlK,KAAQnB,MAAM,iCCrDZ0I,GAAYC,KAAZD,QAEOtI,yBAAW,SAACX,EAAYY,GACrC,IACEqB,EAKEjC,EALFiC,MACAuG,EAIExI,EAJFwI,SACA2B,EAGEnK,EAHFmK,gBACAC,EAEEpK,EAFFoK,YACAiB,EACErL,EADFqL,cAIF,SAASQ,EAAc9M,EAAe2L,EAAiBtK,GACrD,IAAMoM,EAAaC,IAAUxK,GACzB7B,EAEFoM,EAAWzN,GAAX,KAA0BqB,GAAYsK,EAGtC8B,EAAWzN,GAAX,MAA6B2L,EAG/BlC,EAASgE,GAoBX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACE,GAAD,CACEpB,gBAAiBrJ,EACjBoJ,cAAeA,EACfD,MAbR,SAAqBM,GACnB,IAAMc,EAAaC,IAAUxK,GAC7BuK,EAAW5N,KAAK8M,GAEhBlD,EAASgE,OAYP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,GAAI,GAAIC,GAAI,IACf,kBAACT,GAAD,CACEtG,MACE,oCACE,4DACA,mDAA2BsE,KAJjC,SAWA,kBAAC,KAAD,CACE3B,SAAU4B,EACVW,UAAWZ,EACX0C,aAAc,kBAAM,gCAEnBxB,EAAcnN,KAAI,SAACkC,GAAD,OACjB,kBAAC,GAAD,CAAS6K,IAAK7K,EAAUgC,IAAKhC,GAC1B6B,EAAM/D,KAAI,SAAC8D,EAAakK,GAAd,OACT,kBAACvK,EAAA,EAAD,CACES,IAAK8J,EACLjK,MAAOD,EAAOK,KAAKjC,GACnBoI,SAAU,SAAAoC,GAAC,OAAIiB,EAAcK,EAAGtB,EAAEmB,OAAO9J,MAAO7B,eAO5D,kBAAC,IAAD,CAAKuM,GAAI,GAAIC,GAAI,IACf,kBAACT,GAAD,CAActG,MAAM,gEAApB,UAKC5D,EAAM/D,KAAI,SAAC8D,EAAakK,GAAd,OACT,kBAAC,IAAD,CAAK9J,IAAK8J,GACR,kBAAC,IAAD,CAAKlE,KAAM,IACT,kBAACrG,EAAA,EAAD,CACEM,MAAOD,EAAOC,MACduG,SAAU,SAAAoC,GAAC,OAAIiB,EAAcK,EAAGtB,EAAEmB,OAAO9J,WAG7C,kBAAC,IAAD,CAAKC,MAAO,CAAE+F,UAAW,UAAYD,KAAM,GACxCkE,EAAI,EAEH,kBAAC,KAAD,CACE3N,KAAK,SACL8E,KAAK,SACLwE,MAAM,SACNtC,QAAS,kBA7E3B,SAAkBxG,GAChB,IAAMyN,EAAaC,IAAUxK,GAE7BuK,EAAWvN,OAAOF,EAAO,GAEzByJ,EAASgE,GAwEsBM,CAASZ,MAExB,gBCtGda,G,oDACJ,WAAY/M,GAAa,IAAD,wBACtB,cAAMA,IAURoK,YAAc,SAACD,GACb,EAAK6C,SAAS,CAAE7C,qBAZM,EAexBE,cAAgB,SAAC1B,GACf,MAA4B,EAAK3I,MAAzBa,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACNmM,EAAmCpM,EAAnCoM,eAAgBC,EAAmBrM,EAAnBqM,eAElBC,EAAc,CAAC,aACjBrM,EAAUiB,SACZoL,EAAYvO,KAAK,WAEnB,MAA+B6N,IAAUS,EAAeC,IAAhDnM,EAAR,EAAQA,UAAWe,EAAnB,EAAmBA,QAGnB,GAFAf,EAAU2H,GAAQ,GAEd5G,EACF,IAAK,IAAIhD,EAAQ,EAAGA,EAAQgD,EAAQ/C,OAAQD,IAC1CgD,EAAQhD,GAAOsD,KAAKsG,GAAQ,GAIhCsE,EAAe,CAAEjM,YAAWe,YAC5B,EAAKiL,SAAS,CACZ3B,cAAejM,OAAOoL,KAAKxJ,MAlCP,EAsCxBsJ,iBAAmB,SAAC3B,GAElB,MAA4B,EAAK3I,MAAzBa,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACNmM,EAAmCpM,EAAnCoM,eAAgBC,EAAmBrM,EAAnBqM,eAElBC,EAAc,CAAC,aACjBrM,EAAUiB,SACZoL,EAAYvO,KAAK,WAEnB,MAA+B6N,IAAUS,EAAeC,IAAhDnM,EAAR,EAAQA,UAAWe,EAAnB,EAAmBA,QAInB,UAFOf,EAAU2H,GAEb5G,EACF,IAAK,IAAIhD,EAAQ,EAAGA,EAAQgD,EAAQ/C,OAAQD,WACnCgD,EAAQhD,GAAOsD,KAAKsG,GAG/B,IAAMyE,EAAgBhO,OAAOoL,KAAKxJ,GAElC,EAAKgM,SACH,CACE7C,gBAAiBiD,EAAc,GAC/B/B,cAAe+B,IAEjB,WAEEH,EAAe,CAAEjM,YAAWe,gBA9DhC,IAAMsJ,EAAgBjM,OAAOoL,KAAKxK,EAAMc,UAAUE,WAH5B,OAKtB,EAAK3C,MAAQ,CACXgN,gBACAlB,gBAAiBkB,EAAc,IAPX,E,2CAsExB,WACE,MAIMgC,KAAKrN,MAHPa,EADJ,EACIA,KAEAC,EAHJ,EAGIA,UAHJ,EAKuCuM,KAAKhP,MAAxC8L,EALJ,EAKIA,gBAAiBkB,EALrB,EAKqBA,cACjBnK,EAAsBL,EAAtBK,kBACAF,EAAiCF,EAAjCE,UAAWD,EAAsBD,EAAtBC,SAAUgB,EAAYjB,EAAZiB,QAEzB,OACE,kBAAC,KAAD,CAAMuL,OAAO,YACX,kBAAC,KAAKvI,KAAN,CAAW1D,MAAO,kBAAC,EAAD,CAAgBvC,GAAG,6BAClCoC,EAAkB,YAAa,CAC9BM,aAAcR,EACdS,MAAO,CAAC,CAAEV,UAAU,EAAMW,QAAS,oBAFpCR,CAIC,kBAACqM,GAAD,CACEpD,gBAAiBA,EACjBC,YAAaiD,KAAKjD,YAClBC,cAAegD,KAAKhD,cACpBC,iBAAkB+C,KAAK/C,qBAK5BvI,EACC,kBAAC,KAAKgD,KAAN,CAAW1D,MAAO,kBAAC,EAAD,CAAgBvC,GAAG,2BAClCoC,EAAkB,UAAW,CAC5BM,aAAcO,EACdN,MAAO,CAAC,CAAEV,UAAU,EAAMW,QAAS,oBAFpCR,CAIC,kBAACsM,GAAD,CACEnC,cAAeA,EACflB,gBAAiBA,MAIrB,KAEJ,kBAAC,KAAKpF,KAAN,KACG7D,EAAkB,WAAY,CAC7BM,aAAcT,EACd0M,cAAe,WAFhBvM,CAIC,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAgBpC,GAAG,mC,GArHR4O,iBA8HVC,QAAKC,QAALD,CAA+BZ,IC/H/B,SAASc,GAAe7N,GACrC,IAAQ4L,EAAoD5L,EAApD4L,YAAakC,EAAuC9N,EAAvC8N,WAAYC,EAA2B/N,EAA3B+N,YAAajN,EAAcd,EAAdc,UAC1CoE,EAAajF,qBAAWC,IAAxBgF,SACF8I,EAAU9H,mBAiBZ,OACE,kBAAC,KAAD,CACEL,MAAO,kBAAC,EAAD,CAAgB/G,GAAIiP,EAAY3K,OACvC0E,QAAS8D,EACTI,QAAS8B,EACT7B,gBAAc,EACdvL,UAAWqI,KAAOkF,cAElB,kBAAC,IAAD,CAAK/L,MAAO,CAAEY,OAAQ,MAAOoL,UAAW,SACtC,kBAACC,GAAD,CACEC,oBAAqBJ,EACrBD,YAAaA,EACbjN,UAAWA,KAGf,kBAAC,IAAD,CACEvC,KAAK,OACL8P,QAAQ,gBACRC,MAAM,SACNpM,MAAO,CAAEY,OAAQ,QAEjB,kBAACsJ,GAAD,CAAetE,QAAS8D,EAAa7D,SApC3C,SAAsB6C,GACpBA,EAAEE,kBAIFyD,EAD2BP,EAAQzH,QAAQvG,MAAMa,KAAzC0N,iBACO,SAACC,EAAUjC,GACnBiC,IAEHtJ,EXjBC,CACL3G,KAAM,gBACNO,GWe0BgC,EAAUhC,GXdpCI,QWcwCqN,IAEpCX,aCtBO,gBAAC5L,GACd,MAAoCuL,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBW,EAAnB,KAUA,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,iBACMzO,EADN,CAEE4L,YARN,WACE6C,GAAc,IAQVX,WAAYA,KAEd,kBAACY,GAAD,CAAYnJ,QAfhB,WACEkJ,GAAc,QCDH,YAACzO,GACd,IAAQ+N,EAA2B/N,EAA3B+N,YAAajN,EAAcd,EAAdc,UACrB,OACE,yBAAKJ,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKiM,GAAI,GAAIC,GAAI,IACf,kBAAC,EAAD,CAAgB9N,GAAIiP,EAAY3K,QAElC,kBAAC,IAAD,CAAKuJ,GAAI,GAAIC,GAAI,EAAG1K,MAAO,CAAE+F,UAAW,UACtC,kBAAC0G,GAAgB3O,GADnB,OAGE,kBAAC4O,GAAD,CAAc9P,GAAIgC,EAAUhC,OAGhC,kBAAC,IAAD,KAAMkB,EAAMiG,Y,oBC2CH0H,YAAKC,QAALD,EAvDf,SAAqB3N,GACnB,MAA+CC,qBAC7CC,IADM7B,EAAR,EAAQA,MAAOqG,EAAf,EAAeA,QAAStE,EAAxB,EAAwBA,SAAU8E,EAAlC,EAAkCA,SAG1BrE,EAASb,EAATa,KACFgO,EAAYxQ,EAAMK,IAAI,QAE5B,SAASsH,EAASQ,EAAmBC,GACnCvB,EdKK,CACL3G,KAAM,eACNgB,ScPqBiH,EdQrBlH,ScRgCmH,IAIlC,OACE,kBAAC,KAAD,KACE,kBAACqI,GAAA,EAAD,CAAaC,QAASC,MACnBH,EAAU3Q,KAAI,SAACS,EAAWuN,GACzB,IAAM+C,EAActQ,EAAKQ,QAEnB+P,EAAsBxK,EAAQyK,MAClC,SAACC,GAAD,OAAuBH,IAAgBG,EAAahN,OAGhDqB,EAAYyL,EACdA,EAAoBzL,UACpB4L,KAEJ,OACE,kBAACC,GAAD,CACElN,IAAKzD,EAAKG,GACVC,MAAOmN,EACPpN,GAAIH,EAAKG,GACTkH,SAAUA,GAEV,kBAACuJ,GAAD,CAEExB,YAAamB,EACbpO,UAAWnC,EACXyD,IAAKzD,EAAKG,IAEV,kBAAC2E,EAAD,CAEE5C,KAAMA,EACNkN,YAAamB,EACbpO,UAAWnC,EACXyB,SAAUA,c,oDC3CbL,mBAAK,SAASC,GAC3B,IAAQwI,EAAoCxI,EAApCwI,SAAUhH,EAA0BxB,EAA1BwB,aAAiBgO,EAAnC,YAA4CxP,EAA5C,MACsByP,qBAAWrR,ErCJP,SAACoD,GAAD,OAC1B,IAAIkO,IAAiB,CAAC,CAAC,OAAQlO,GAAgB,MqCGLmO,CAAanO,IADvD,mBACGnD,EADH,KACU6G,EADV,KAEE0K,EAFF,2BAGOnL,GAAkB+K,IAHzB,IAIInR,QACA6G,aAEF2K,EAAWxR,EAAMK,IAAI,QACjBoR,EClBmB,SAAe7N,GACxC,IAAMrB,EAAMsF,mBAKZ,OAHA6J,qBAAU,WACRnP,EAAI2F,QAAUtE,IACb,CAACA,IACGrB,EAAI2F,QDYcyJ,CAAYH,GAerC,OAZAE,qBAAU,WAGc,oBAAbvH,GACPsH,IACCG,KAAQH,EAAkBD,IAE3BrH,EAASqH,KAEV,CAACrH,EAAUqH,EAAUC,IAItB,yBAAKpP,UAAU,yBACb,kBAAC,GAAawP,SAAd,CAAuBjO,MAAO2N,GAC5B,kBAAC,IAAD,CAAK1N,MAAO,CAAEY,OAAQ,SACpB,kBAAC,IAAD,CAAK8J,GAAI,EAAGD,GAAI,GAAIwD,MAAO,GACzB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAKxD,GAAI,GAAIC,GAAI,GAAIuD,MAAO,EAAGjO,MAAO,CAAEY,OAAQ,SAC9C,kBAACsN,GAAD,a,kCEnCNC,G,sKAEJ,SAAazF,GACXA,EAAEE,iBACF,MAA2BuC,KAAKrN,MAAxB+H,EAAR,EAAQA,SAAR,EAAkBlH,KAEb0N,gBAAe,SAACC,EAAUjC,GACxBiC,GACqB,oBAAbzG,GAETA,EAASwE,Q,oBAUjB,WACE,MAA8Cc,KAAKrN,MAA3Ca,EAAR,EAAQA,KAAMyP,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAClBX,EAAenL,GADjB,mBAEA,OACE,yBAAK/D,UAAU,uBACb,kBAAC,GAAawP,SAAd,CAAuBjO,MAAO2N,GAC5B,kBAAC,KAAD,CAAMlP,UAAU,uBACb4P,EAAKpS,KAAI,SAACS,GACT,IAAMsQ,EAActQ,EAAKQ,QAEnB+P,EAAsBU,EAAY,QAAYT,MAClD,SAACC,GAAD,OAAuBH,IAAgBG,EAAahN,OAGhDqB,EAAYyL,EACdA,EAAoBzL,UACpB4L,KAEJ,OACE,kBAAC5L,EAAD,CAEErB,IAAKzD,EAAKG,GACV+B,KAAMA,EACNkN,YAAamB,EACbpO,UAAWnC,EACXyB,SAAUwP,EAAY,cAI3BW,EACC,kBAAC,KAAKxL,KAAN,KACE,kBAAC,IAAD,CACExG,KAAK,UACLiS,SAAS,SACTjL,QAAS8H,KAAKoD,aAAaC,KAAKrD,OAEhC,kBAAC,EAAD,CAAgBvO,GAAG,iBAGrB,Y,GA3DI4O,iBAAd2C,GAgBGM,aAAe,CACpBJ,cAAc,GAkDH5C,YAAKC,QAALD,CAAmB0C,I,QCpElC,SAASO,KACP,MAAgCrF,mBAAS,IAAzC,mBAAOsF,EAAP,KAAiBC,EAAjB,KACA,EAA8CvF,oBAAS,GAAvD,mBAAOwF,EAAP,KAAwBC,EAAxB,KAEA,OACE,yBAAKtQ,UAAU,OACb,kBAAC,IAAD,CAAQ6E,QAAS,kBAAMyL,GAAmB,KAA1C,gBACA,kBAAC,IAAD,CACEnL,MAAM,eACN3D,MAAO,CAAE4E,IAAK,IACdkF,QAAS+E,EACTE,SAAU,kBAAMD,GAAmB,IACnC/E,gBAAc,GAEd,kBAACiF,GAAD,CACEZ,KAAMO,EACN9I,SAAU,SAACwE,GAAD,OAAiBjM,QAAQ6Q,IAAI,qBAAsB5E,OAGjE,kBAAC,GAAD,CAAc/D,SAAUsI,K,QAK9BM,EAASC,OAAO,kBAACT,GAAD,MAAcU,SAASC,eAAe,W","file":"static/js/main.70ebe20a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsForm\":\"drawer_settingsForm__3ZNma\",\"dropdownLanguages\":\"drawer_dropdownLanguages__3_ySj\"};","import { IActions } from \"./actions\";\nimport clonedeep from \"lodash.clonedeep\";\n\ntype Maptype = Map<string, any>;\n\nfunction mapClone(map: Maptype) {\n  return clonedeep(map);\n}\n\nexport const initialState = (initialValue: any) =>\n  new Map<string, any>([[\"data\", initialValue || []]]);\n\nexport type IState = ReturnType<typeof initialState>;\n\nexport function reducer(state: IState, action: IActions) {\n  switch (action.type) {\n    case \"ADD_ELEMENT\": {\n      const new_state = mapClone(state),\n        new_data = new_state.get(\"data\");\n      const { item } = action;\n      new_data.push(item);\n\n      return new_state.set(\"data\", new_data);\n    }\n\n    case \"DELETE_ELEMENT\": {\n      const new_state = mapClone(state),\n        new_data = new_state.get(\"data\"),\n        { id } = action;\n\n      for (let index = 0; index < new_data.length; index++) {\n        const element = new_data[index];\n        if (element[\"id\"] === id) {\n          // if it finds equal id on list deletes it\n          new_data.splice(index, 1);\n        }\n      }\n\n      return new_state.set(\"data\", new_data);\n    }\n\n    case \"PATCH_ELEMENT\": {\n      const new_state = mapClone(state),\n        new_data = new_state.get(\"data\"),\n        { id, newitem } = action;\n\n      for (let index = 0; index < new_data.length; index++) {\n        const element = new_data[index];\n        if (element[\"id\"] === id) {\n          // if it finds equal id on list updates it\n          new_data[index] = Object.assign(element, newitem);\n          break;\n        }\n      }\n\n      return new_state.set(\"data\", new_data);\n    }\n\n    case \"MOVE_ELEMENT\": {\n      const new_state = mapClone(state);\n      const new_data = new_state.get(\"data\");\n      const { newIndex, oldIndex } = action;\n\n      if (newIndex >= new_data.length) {\n        var k = newIndex - new_data.length + 1;\n        while (k--) {\n          new_data.push(undefined);\n        }\n      }\n      new_data.splice(newIndex, 0, new_data.splice(oldIndex, 1)[0]);\n\n      return new_state.set(\"data\", new_data);\n    }\n\n    default:\n      throw new Error(\"unkown reducer action type\");\n  }\n}\n","import React, { useContext, memo } from \"react\";\nimport QuizzContext from \"../QuizzContext\";\nimport ISO6391 from \"iso-639-1\";\nimport en from \"./messages/en.json\";\n\nconst { validate } = ISO6391;\n\ninterface IdMessage {\n  [key: string]: string;\n}\nexport interface MessagesRecord {\n  [key: string]: IdMessage;\n}\n\nexport const defaultMessages: MessagesRecord = {\n  en: en\n};\n\nfunction TranslatedText(props: { id: string }) {\n  const { id } = props,\n    { messages, language } = useContext(QuizzContext);\n\n  // checks valid language\n  if (typeof language !== \"string\" || !validate(language)) {\n    const no_language_error =\n      \"language supplied not string or not complience with ISO\";\n    console.error(no_language_error);\n    throw no_language_error;\n  }\n\n  // checks valid messages\n  if (typeof messages !== \"object\" || !messages.hasOwnProperty(language)) {\n    const no_language_in_messages_error =\n      \"messages not object or does not include current language\";\n    console.error(no_language_in_messages_error);\n    throw no_language_in_messages_error;\n  }\n  let translated_message = \"\";\n  // checks valid id\n  if (!messages[language].hasOwnProperty(id)) {\n    const no_id = \"id not found in current language messages\";\n    console.error(no_id);\n    translated_message = id;\n    // throw no_id;\n  } else {\n    translated_message = messages[language][id];\n  }\n\n  return <span className=\"translated\">{translated_message}</span>;\n}\n\nexport default memo(TranslatedText);\n","import React, { forwardRef } from \"react\";\nimport Input from \"antd/es/input/Input\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nexport default forwardRef((props: any, ref: any) => {\n  const { form, inputData, language } = props,\n    { required, questions, id, defaultValue } = inputData,\n    { getFieldDecorator } = form;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    >\n      {getFieldDecorator(id, {\n        initialValue: defaultValue,\n        rules: [\n          {\n            required,\n            message: \"Required Field\"\n          }\n        ]\n      })(<Input ref={ref} />)}\n    </FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nexport default forwardRef((props: any, ref: any) => {\n  const { inputData, language } = props,\n    { questions } = inputData;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <h1\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    ></FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nexport default forwardRef((props: any, ref: any) => {\n  const { inputData, language } = props,\n    { questions } = inputData;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    ></FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport FormItem from \"antd/es/form/FormItem\";\nimport Divider from \"antd/es/divider/index\";\n\nexport default forwardRef(() => {\n  return (\n    <FormItem colon={false}>\n      <Divider />\n    </FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport Select from \"antd/es/select/index\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nconst SelectOption = Select.Option;\n\nexport default forwardRef((props: any, ref: any) => {\n  const { form, inputData, language } = props,\n    { required, questions, defaultValue, id, options } = inputData,\n    { getFieldDecorator } = form;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    >\n      {getFieldDecorator(id, {\n        initialValue: defaultValue,\n        rules: [\n          {\n            required,\n            message: \"Required Field\"\n          }\n        ]\n      })(\n        <Select >\n          {options.map((option: any) => {\n            return (\n              <SelectOption\n                value={option.value}\n                // on long answers removes \"...\" and makes break line, makes possible to see all answer\n                style={{ whiteSpace: \"normal\" }}\n                key={option.value}\n              >\n                {option.text[language]}\n              </SelectOption>\n            );\n          })}\n        </Select>\n      )}\n    </FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport Select from \"antd/es/select/index\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nconst SelectOption = Select.Option;\n\nexport default forwardRef((props: any, ref: any) => {\n  const { form, inputData, language } = props,\n    { required, questions, defaultValue, id, options } = inputData,\n    { getFieldDecorator } = form;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    >\n      {getFieldDecorator(id, {\n        initialValue: defaultValue,\n        rules: [\n          {\n            required,\n            message: \"Required Field\"\n          }\n        ]\n      })(\n        <Select mode=\"tags\" >\n          {options.map((option: any) => {\n            return (\n              <SelectOption value={option.value} key={option.value}>\n                {option.text[language]}\n              </SelectOption>\n            );\n          })}\n        </Select>\n      )}\n    </FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport Checkbox from \"antd/es/checkbox/index\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nconst CheckboxGroup = Checkbox.Group;\n\nexport default forwardRef((props: any, ref: any) => {\n  const { form, inputData, language } = props,\n    { required, questions, defaultValue, id, options } = inputData,\n    { getFieldDecorator } = form;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    >\n      {getFieldDecorator(id, {\n        initialValue: defaultValue,\n        rules: [\n          {\n            required,\n            message: \"Required Field\"\n          }\n        ]\n      })(\n        <CheckboxGroup>\n          {options.map((option: any) => (\n            <Checkbox value={option.value} key={option.value}>\n              {option.text[language]}\n            </Checkbox>\n          ))}\n        </CheckboxGroup>\n      )}\n    </FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport RadioGroup from \"antd/es/radio/group\";\nimport Radio from \"antd/es/radio/radio\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nexport default forwardRef((props: any, ref: any) => {\n  const { form, inputData, language } = props,\n    { required, questions, defaultValue, id, options } = inputData,\n    { getFieldDecorator } = form;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    >\n      {getFieldDecorator(id, {\n        initialValue: defaultValue,\n        rules: [\n          {\n            required,\n            message: \"Required Field\"\n          }\n        ]\n      })(\n        <RadioGroup>\n          {options.map((option: any) => (\n            <Radio\n              key={option.value}\n              value={option.value}\n              style={{\n                // on long answers makes breakline so it does not overflow\n                whiteSpace: \"normal\"\n              }}\n            >\n              {option.text[language]}\n            </Radio>\n          ))}\n        </RadioGroup>\n      )}\n    </FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport NumberInput from \"antd/es/input-number/index\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nexport default forwardRef((props: any, ref: any) => {\n  const { form, inputData, language } = props,\n    { required, questions, id, defaultValue } = inputData,\n    { getFieldDecorator } = form;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    >\n      {getFieldDecorator(id, {\n        initialValue: defaultValue,\n        rules: [\n          {\n            required,\n            message: \"Required Field\"\n          }\n        ]\n      })(<NumberInput ref={ref} />)}\n    </FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport InputTextArea from \"antd/es/input/TextArea\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nexport default forwardRef((props: any, ref: any) => {\n  const { form, inputData, language } = props,\n    { required, questions, id, defaultValue } = inputData,\n    { getFieldDecorator } = form;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    >\n      {getFieldDecorator(id, {\n        initialValue: defaultValue,\n        rules: [\n          {\n            required,\n            message: \"Required Field\"\n          }\n        ]\n      })(<InputTextArea ref={ref} autoSize />)}\n    </FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport Rate from \"antd/es/rate/index\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nexport default forwardRef((props: any, ref: any) => {\n  const { form, inputData, language } = props,\n    { required, questions, id, defaultValue } = inputData,\n    { getFieldDecorator } = form;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    >\n      {getFieldDecorator(id, {\n        initialValue: defaultValue,\n        rules: [\n          {\n            required,\n            message: \"Required Field\"\n          }\n        ]\n      })(<Rate ref={ref} allowHalf />)}\n    </FormItem>\n  );\n});\n","import React, { forwardRef } from \"react\";\nimport DatePicker from \"antd/es/date-picker/index\";\nimport FormItem from \"antd/es/form/FormItem\";\n\nexport default forwardRef((props: any, ref: any) => {\n  const { form, inputData, language } = props,\n    { required, questions, id, defaultValue } = inputData,\n    { getFieldDecorator } = form;\n\n  return (\n    <FormItem\n      colon={false}\n      label={\n        <label\n          dangerouslySetInnerHTML={{\n            __html: questions[language] || \"no question for selected language\"\n          }}\n        />\n      }\n    >\n      {getFieldDecorator(id, {\n        initialValue: defaultValue,\n        rules: [\n          {\n            required,\n            message: \"Required Field\"\n          }\n        ]\n      })(<DatePicker /* ref={ref} isClearable */ />)}\n    </FormItem>\n  );\n});\n","import React from \"react\";\n\nexport default function() {\n  return (\n    <svg\n      viewBox=\"64 64 896 896\"\n      width=\"1em\"\n      height=\"1em\"\n      fill=\"currentColor\"\n    >\n      <defs>\n        <style type=\"text/css\"></style>\n      </defs>\n      <path\n        d=\"M506.892 81.849c-241.603 0-439.276 197.674-439.276 439.276 0 241.598 197.674 439.271 439.276 439.271 241.598 0 439.269-197.674 439.269-439.271 0-241.603-197.674-439.276-439.269-439.276z m0 834.618c-219.637 0-395.348-175.709-395.348-395.342 0-219.637 175.709-395.348 395.348-395.348 219.633 0 395.342 175.709 395.342 395.348-0.001 219.633-175.711 395.342-395.342 395.342z m0 0z\"\n        p-id=\"2146\"\n        fill=\"\"\n      ></path>\n      <path\n        d=\"M287.253 521.124c0 28.751 5.714 57.488 16.719 84.049 11.002 26.562 27.28 50.929 47.611 71.255 20.331 20.331 44.69 36.609 71.255 47.612 26.559 11.006 55.301 16.718 84.053 16.718 28.751 0 57.488-5.714 84.049-16.718 26.562-11.003 50.929-27.282 71.255-47.612 20.331-20.327 36.609-44.69 47.612-71.255 11.006-26.56 16.718-55.299 16.718-84.049 0-28.752-5.714-57.494-16.718-84.053-11.003-26.563-27.282-50.925-47.612-71.255-20.327-20.331-44.69-36.609-71.255-47.611-26.56-11.007-55.299-16.719-84.049-16.719-28.752 0-57.494 5.714-84.053 16.719-26.563 11.002-50.925 27.28-71.255 47.611-20.331 20.331-36.609 44.69-47.611 71.255-11.007 26.559-16.719 55.301-16.719 84.053z m0 0z\"\n        p-id=\"2147\"\n        fill=\"\"\n      ></path>\n    </svg>\n  );\n}\n","import React from \"react\";\n\nexport default function() {\n  return (\n    <svg\n      viewBox=\"64 64 896 896\"\n      width=\"1em\"\n      height=\"1em\"\n      fill=\"currentColor\"\n    >\n      <defs>\n        <style type=\"text/css\"></style>\n      </defs>\n      <path\n        d=\"M961.142857 950.857143q-25.142857 0-75.714286-2T809.142857 946.857143q-25.142857 0-75.428571 2t-75.428572 2q-13.714286 0-21.142857-11.714286t-7.428571-26q0-17.714286 9.714285-26.285714t22.285715-9.714286 29.142857-4 25.714286-8.571428q18.857143-12 18.857142-80l-0.571428-223.428572q0-12-0.571429-17.714286-7.428571-2.285714-28.571428-2.285714H320q-21.714286 0-29.142857 2.285714-0.571429 5.714286-0.571429 17.714286l-0.571428 212q0 81.142857 21.142857 93.714286 9.142857 5.714286 27.428571 7.428571t32.571429 2 25.714286 8.571429 11.428571 26q0 14.857143-7.142857 27.428571t-20.857143 12.571429q-26.857143 0-79.714286-2T221.142857 946.857143q-24.571429 0-73.142857 2t-72.571429 2q-13.142857 0-20.285714-12T48 913.142857q0-17.142857 8.857143-25.714286t20.571428-10 27.142858-4.285714 24-8.571428q18.857143-13.142857 18.857142-81.714286l-0.571428-32.571429V285.714286q0-1.714286 0.285714-14.857143t0-20.857143T146.285714 228t-2-24-3.714285-20.857143-6.285715-18-9.142857-10.285714q-8.571429-5.714286-25.714286-6.857143t-30.285714-1.142857-23.428571-8-10.285715-25.714286q0-14.857143 6.857143-27.428571t20.571429-12.571429q26.285714 0 79.142857 2T221.142857 77.142857q24 0 72.285714-2T365.714286 73.142857q14.285714 0 21.428571 12.571429t7.142857 27.428571q0 17.142857-9.714285 24.857143T362.571429 146.285714t-28.285715 2.285715-24.571428 7.428571q-20 12-20 91.428571l0.571428 182.857143q0 12 0.571429 18.285715 7.428571 1.714286 22.285714 1.714285h399.428572q14.285714 0 21.714285-1.714285 0.571429-6.285714 0.571429-18.285715l0.571428-182.857143q0-79.428571-20-91.428571-10.285714-6.285714-33.428571-7.142857t-37.714286-7.428572T629.714286 113.142857q0-14.857143 7.142857-27.428571t21.428571-12.571429q25.142857 0 75.428572 2t75.428571 2q24.571429 0 73.714286-2t73.714286-2q14.285714 0 21.428571 12.571429t7.142857 27.428571q0 17.142857-10 25.142857t-22.857143 8.285715-29.428571 1.714285-25.142857 7.142857q-20 13.142857-20 92l0.571428 538.857143q0 68 19.428572 80 9.142857 5.714286 26.285714 7.714286t30.571429 2.571429 23.714285 8.857142 10.285715 25.428572q0 14.857143-6.857143 27.428571t-20.571429 12.571429z\"\n        p-id=\"2691\"\n        fill=\"\"\n      ></path>\n    </svg>\n  );\n}\n","import React from \"react\";\n\nexport default function() {\n  return (\n    <svg\n      viewBox=\"64 64 896 896\"\n      width=\"1em\"\n      height=\"1em\"\n      fill=\"currentColor\"\n    >\n      <defs>\n        <style type=\"text/css\"></style>\n      </defs>\n      <path\n        d=\"M85.333333 170.666667v682.666666h853.333334V170.666667H85.333333zM0 85.333333h1024v853.333334H0V85.333333z m298.666667 640h42.666666v42.666667H213.333333v-42.666667h42.666667V298.666667H213.333333V256h128v42.666667H298.666667v426.666666z\"\n        p-id=\"6364\"\n        fill=\"\"\n      ></path>\n    </svg>\n  );\n}\n","import React from \"react\";\n\nexport default function() {\n  return (\n    <svg\n      viewBox=\"64 64 896 896\"\n      width=\"1em\"\n      height=\"1em\"\n      fill=\"currentColor\"\n    >\n      <defs>\n        <style type=\"text/css\"></style>\n      </defs>\n      <path\n        d=\"M279.272727 791.272727h512a46.545455 46.545455 0 0 1 0 93.090909H279.272727a46.545455 46.545455 0 0 1 0-93.090909z m33.838546-617.984V651.636364H193.722182V395.170909c0-37.003636-0.884364-59.298909-2.653091-66.746182a24.948364 24.948364 0 0 0-14.615273-16.989091c-8.005818-3.863273-25.786182-5.771636-53.341091-5.771636h-11.822545v-55.854545c57.716364-12.381091 101.562182-37.888 131.490909-76.520728h70.283636z m303.709091 396.8V651.636364H354.164364v-68.235637c77.777455-127.255273 124.043636-206.010182 138.705454-236.218182 14.661818-30.254545 22.016-53.853091 22.016-70.74909 0-13.032727-2.234182-22.714182-6.656-29.137455-4.421818-6.376727-11.170909-9.588364-20.247273-9.588364a22.248727 22.248727 0 0 0-20.200727 10.612364c-4.468364 7.121455-6.656 21.178182-6.656 42.263273v45.521454H354.164364v-17.454545c0-26.763636 1.396364-47.941818 4.142545-63.348364 2.746182-15.499636 9.541818-30.72 20.386909-45.661091 10.798545-14.987636 24.901818-26.298182 42.216727-33.978182 17.361455-7.68 38.167273-11.543273 62.37091-11.543272 47.476364 0 83.316364 11.776 107.706181 35.328 24.296727 23.552 36.445091 53.341091 36.445091 89.367272 0 27.368727-6.842182 56.32-20.48 86.853819-13.730909 30.533818-54.039273 95.325091-121.018182 194.420363h130.885819z m270.615272-189.393454c18.152727 6.097455 31.650909 16.104727 40.494546 29.975272 8.843636 13.917091 13.312 46.452364 13.312 97.652364 0 38.027636-4.328727 67.490909-13.032727 88.529455-8.657455 20.945455-23.598545 36.910545-44.869819 47.848727-21.271273 10.938182-48.593455 16.384-81.873454 16.384-37.794909 0-67.490909-6.330182-89.088-19.083636-21.550545-12.660364-35.746909-28.253091-42.542546-46.638546-6.795636-18.432-10.193455-50.362182-10.193454-95.883636v-37.841455h119.389091v77.730909c0 20.666182 1.210182 33.838545 3.723636 39.424 2.420364 5.585455 7.912727 8.424727 16.337455 8.424728 9.309091 0 15.36-3.537455 18.338909-10.612364 2.932364-7.121455 4.421818-25.6 4.421818-55.575273v-33.047273c0-18.338909-2.048-31.744-6.190546-40.215272a30.72 30.72 0 0 0-18.338909-16.709818c-8.052364-2.653091-23.738182-4.189091-46.964363-4.561455V357.050182c28.392727 0 45.893818-1.070545 52.596363-3.258182a22.946909 22.946909 0 0 0 14.475637-14.149818c2.932364-7.307636 4.421818-18.711273 4.421818-34.257455v-26.624c0-16.756364-1.722182-27.741091-5.12-33.047272-3.490909-5.352727-8.843636-8.005818-16.151273-8.005819-8.285091 0-13.963636 2.792727-16.989091 8.378182-3.025455 5.632-4.561455 17.640727-4.561454 35.933091v39.284364h-119.389091v-40.773818c0-45.661091 10.472727-76.567273 31.325091-92.625455 20.898909-16.058182 54.085818-24.064 99.607272-24.064 56.878545 0 95.511273 11.170909 115.805091 33.373091 20.293818 22.248727 30.394182 53.201455 30.394182 92.765091 0 26.810182-3.630545 46.173091-10.891636 58.088727-7.307636 11.915636-20.107636 22.807273-38.446546 32.628364z\"\n        p-id=\"5557\"\n        fill=\"\"\n      ></path>\n    </svg>\n  );\n}\n","import React from \"react\";\n\nexport default function() {\n  return (\n    <svg\n      viewBox=\"64 64 896 896\"\n      width=\"1em\"\n      height=\"1em\"\n      fill=\"currentColor\"\n    >\n      <defs>\n        <style type=\"text/css\"></style>\n      </defs>\n      <path\n        d=\"M64 832m64 0l768 0q64 0 64 64l0 0q0 64-64 64l-768 0q-64 0-64-64l0 0q0-64 64-64Z\"\n        p-id=\"6718\"\n        fill=\"\"\n      ></path>\n      <path\n        d=\"M64 64m64 0l256 0q64 0 64 64l0 0q0 64-64 64l-256 0q-64 0-64-64l0 0q0-64 64-64Z\"\n        p-id=\"6719\"\n        fill=\"\"\n      ></path>\n      <path\n        d=\"M192 192h128v320a64 64 0 0 1-64 64 64 64 0 0 1-64-64V192z\"\n        p-id=\"6720\"\n        fill=\"\"\n      ></path>\n      <path\n        d=\"M576 64m64 0l256 0q64 0 64 64l0 0q0 64-64 64l-256 0q-64 0-64-64l0 0q0-64 64-64Z\"\n        p-id=\"6721\"\n        fill=\"\"\n      ></path>\n      <path\n        d=\"M576 448m64 0l256 0q64 0 64 64l0 0q0 64-64 64l-256 0q-64 0-64-64l0 0q0-64 64-64Z\"\n        p-id=\"6722\"\n        fill=\"\"\n      ></path>\n      <path\n        d=\"M576 256m64 0l256 0q64 0 64 64l0 0q0 64-64 64l-256 0q-64 0-64-64l0 0q0-64 64-64Z\"\n        p-id=\"6723\"\n        fill=\"\"\n      ></path>\n      <path\n        d=\"M64 640m64 0l768 0q64 0 64 64l0 0q0 64-64 64l-768 0q-64 0-64-64l0 0q0-64 64-64Z\"\n        p-id=\"6724\"\n        fill=\"\"\n      ></path>\n    </svg>\n  );\n}\n","import React from \"react\";\nimport Avatar from \"antd/es/avatar/index\";\nimport Icon from \"antd/es/icon/index\";\nimport TextInput from \"./Components/TextInput\";\nimport HeaderText from \"./Components/HeaderText\";\nimport Label from \"./Components/Label\";\nimport Divider from \"./Components/Divider\";\nimport Select from \"./Components/Select\";\nimport Tags from \"./Components/Tags\";\nimport Checkboxes from \"./Components/Checkboxes\";\nimport RadioButtons from \"./Components/RadioButtons\";\nimport NumberInput from \"./Components/NumberInput\";\nimport MultiLineInput from \"./Components/MultiLineInput\";\nimport Rate from \"./Components/Rate\";\nimport DatePicker from \"./Components/DatePicker\";\n\nimport radioButtonIcon from \"./CustomIcons/radiobuttonicon\";\nimport headerIcon from \"./CustomIcons/headericon\";\nimport inputIcon from \"./CustomIcons/inputIcon\";\nimport numberInputIcon from \"./CustomIcons/numberInputIcon\";\nimport multiLineInputIcon from \"./CustomIcons/multiLineInputIcon\";\n\nfunction _defaultItems() {\n  // deafult sample question\n  const questions = {\n    en: \"Sample question ?\",\n    pt: \"Pergunta exemplo ?\"\n  };\n\n  const options = [\n    {\n      value: \"1\",\n      text: { ...questions }\n    },\n    {\n      value: \"2\",\n      text: { ...questions }\n    }\n  ];\n\n  return [\n    {\n      key: \"HeaderText\",\n      name: \"toolbox.headertext.name\", // id of translation\n      questions,\n      // description: \"toolbox.headertext.description\", // desciption under input on toolbox\n      icon: (\n        <Avatar>\n          <Icon component={headerIcon} />\n        </Avatar>\n      ), // this will go to Dom so can be string|| jsx component\n      field_name: \"header_text_\", // will add a generated uuidv4\n      Component: HeaderText // component not instanciated\n    },\n    {\n      key: \"LabelText\",\n      name: \"toolbox.label.name\", // id of translation\n      questions,\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\n      icon: <Avatar icon=\"font-colors\" />, // this will go to Dom so can be string|| jsx component\n      field_name: \"label_\", // will add a generated uuidv4\n      Component: Label // component not instanciated\n    },\n    {\n      key: \"Divider\",\n      name: \"toolbox.divider.name\", // id of translation\n      questions,\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\n      icon: <Avatar icon=\"line\" />, // this will go to Dom so can be string|| jsx component\n      field_name: \"divider_\", // will add a generated uuidv4\n      Component: Divider // component not instanciated\n    },\n    {\n      key: \"Select\",\n      name: \"toolbox.select.name\", // id of translation\n      questions,\n      options,\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\n      icon: <Avatar icon=\"down-square\" />, // this will go to Dom so can be string|| jsx component\n      field_name: \"select_\", // will add a generated uuidv4\n      Component: Select // component not instanciated\n    },\n    {\n      key: \"Tags\",\n      name: \"toolbox.tags.name\", // id of translation\n      questions,\n      options,\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\n      icon: <Avatar icon=\"tags\" />, // this will go to Dom so can be string|| jsx component\n      field_name: \"tags_\", // will add a generated uuidv4\n      Component: Tags // component not instanciated\n    },\n    {\n      key: \"Checkboxes\",\n      name: \"toolbox.checkboxes.name\", // id of translation\n      questions,\n      options,\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\n      icon: <Avatar icon=\"check-circle\" />, // this will go to Dom so can be string|| jsx component\n      field_name: \"checkboxes_\", // will add a generated uuidv4\n      Component: Checkboxes // component not instanciated\n    },\n    {\n      key: \"RadioButtons\",\n      name: \"toolbox.radiobuttons.name\", // id of translation\n      questions,\n      options,\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\n      icon: (\n        <Avatar>\n          <Icon component={radioButtonIcon} />\n        </Avatar>\n      ), // this will go to Dom so can be string|| jsx component\n      field_name: \"radiobuttons_\", // will add a generated uuidv4\n      Component: RadioButtons // component not instanciated\n    },\n    {\n      key: \"TextInput\",\n      name: \"toolbox.textinput.name\", // id of translation\n      questions,\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\n      icon: (\n        <Avatar>\n          <Icon component={inputIcon} />\n        </Avatar>\n      ), // this will go to Dom so can be string|| jsx component\n      field_name: \"textinput_\", // will add a generated uuidv4\n      Component: TextInput // component not instanciated\n    },\n    {\n      key: \"NumberInput\",\n      name: \"toolbox.numberinput.name\", // id of translation\n      questions,\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\n      icon: (\n        <Avatar>\n          <Icon component={numberInputIcon} />\n        </Avatar>\n      ), // this will go to Dom so can be string|| jsx component\n      field_name: \"numberinput_\", // will add a generated uuidv4\n      Component: NumberInput // component not instanciated\n    },\n    {\n      key: \"MultiLineInput\",\n      name: \"toolbox.multilineinput.name\", // id of translation\n      questions,\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\n      icon: (\n        <Avatar>\n          <Icon component={multiLineInputIcon} />\n        </Avatar>\n      ), // this will go to Dom so can be string|| jsx component\n      field_name: \"multilineinput_\", // will add a generated uuidv4\n      Component: MultiLineInput // component not instanciated\n    },\n    {\n      key: \"Rate\",\n      name: \"toolbox.rate.name\", // id of translation\n      questions,\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\n      icon: <Avatar icon=\"star\" />, // this will go to Dom so can be string|| jsx component\n      field_name: \"rate_\", // will add a generated uuidv4\n      Component: Rate // component not instanciated\n    },\n    {\n      key: \"DatePicker\",\n      name: \"toolbox.datepicker.name\", // id of translation\n      questions,\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\n      icon: <Avatar icon=\"calendar\" />, // this will go to Dom so can be string|| jsx component\n      field_name: \"datepicker_\", // will add a generated uuidv4\n      Component: DatePicker // component not instanciated\n    }\n  ];\n}\n\nexport default _defaultItems;\n","import { createContext } from \"react\";\nimport { MessagesRecord } from \"./translations/TranslatedText\";\nimport { IState } from \"./QuizzBuilder/reducer/reducer\";\nimport { IActions } from \"./QuizzBuilder/reducer/actions\";\nimport { defaultMessages } from \"./translations/TranslatedText\";\nimport defaulttoolBox from \"./ToolBox/index\";\n\ninterface IContextProps {\n  toolBox: Array<Object>;\n  language: string;\n  messages: MessagesRecord;\n}\n\nexport type IQuizzContext = IContextProps;\nexport type IQuizzBuilderContext = IContextProps & {\n  state: IState;\n  dispatch: (arg: IActions) => void;\n};\n\n// default context\nexport function getDefaultContext({\n  messages,\n  language,\n  toolBox,\n}: Partial<IContextProps>) {\n  return {\n    messages: messages || defaultMessages,\n    language: language || \"en\",\n    toolBox: toolBox || defaulttoolBox(),\n  };\n}\n\n/* Quiz context */\nconst QuizzContext = createContext<IQuizzContext | IQuizzBuilderContext>(\n  getDefaultContext({})\n);\n\nexport default QuizzContext;\n","import React, { useContext } from \"react\";\nimport QuizzContext, { IQuizzBuilderContext } from \"../QuizzContext\";\nimport List from \"antd/es/list/index\";\nimport { addElement } from \"./reducer/actions\";\nimport uuidV4 from \"uuid/v4\";\nimport TranslatedText from \"../translations/TranslatedText\";\n\nconst ListItem = List.Item;\nconst ListItemMeta = List.Item.Meta;\n\ninterface IinputData {\n  id: string;\n  element: string;\n  required: boolean;\n  questions: { [key: string]: any }; // @TODO CHANGE TO QUESTIONS TYPE\n  options?: { [key: string]: any }; // @TODO CHANGE TO OTIONS TYPE\n}\n\nexport default (/* props */) => {\n  const { dispatch, toolBox } = useContext(\n    QuizzContext\n  ) as IQuizzBuilderContext;\n\n  function onClickHandler(item: any) {\n    const elementOptions: IinputData = {\n      id: uuidV4(),\n      element: item.key,\n      required: false,\n      questions: item.questions\n    };\n\n    if (item.options) {\n      elementOptions[\"options\"] = item.options;\n    }\n\n    dispatch(addElement(elementOptions));\n  }\n\n  return (\n    <List\n      itemLayout=\"horizontal\"\n      style={{ margin: \"5px\" }}\n      dataSource={toolBox}\n      renderItem={(item: any) => (\n        <ListItem onClick={() => onClickHandler(item)}>\n          <ListItemMeta\n            avatar={item.icon}\n            title={<TranslatedText id={item.name} />}\n            description={\n              item.description ? <TranslatedText id={item.description} /> : null\n            }\n          />\n        </ListItem>\n      )}\n    />\n  );\n};\n","export const addElement = (item: object) => {\n  return {\n    type: \"ADD_ELEMENT\",\n    item,\n  } as const;\n};\n\nexport const patchElement = (id: string, newitem: Object) => {\n  return {\n    type: \"PATCH_ELEMENT\",\n    id,\n    newitem,\n  } as const;\n};\n\nexport const deleteElement = (id: string) => {\n  return {\n    type: \"DELETE_ELEMENT\",\n    id,\n  } as const;\n};\n\nexport const moveElement = (oldIndex: number, newIndex: number) => {\n  return {\n    type: \"MOVE_ELEMENT\",\n    oldIndex,\n    newIndex,\n  } as const;\n};\n\nexport type IActions = ReturnType<\n  | typeof addElement\n  | typeof deleteElement\n  | typeof patchElement\n  | typeof moveElement\n>;\n","import React, { PropsWithChildren, useRef } from \"react\";\nimport { useDrag, useDrop, DropTargetMonitor } from \"react-dnd\";\nimport { XYCoord } from \"dnd-core\";\n\nconst ItemTypes = {\n  CARD: \"card\",\n};\n\nexport interface CardProps {\n  id: string;\n  index: number;\n  moveCard: (dragIndex: number, hoverIndex: number) => void;\n}\n\ninterface DragItem {\n  index: number;\n  id: string;\n  type: string;\n}\n\nexport default (props: PropsWithChildren<CardProps>) => {\n  const { id, index, moveCard, children } = props;\n  const ref = useRef<HTMLDivElement>(null);\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item: DragItem, monitor: DropTargetMonitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n\n      // Get pixels to the top\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex);\n\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: (monitor: any) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n  return (\n    <div ref={ref} style={{ opacity }}>\n      {children}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport Button from \"antd/es/button/index\";\nimport Popconfirm from \"antd/es/popconfirm/index\";\nimport { deleteElement } from \"../../reducer/actions\";\nimport QuizzContext, { IQuizzBuilderContext } from \"../../../QuizzContext\";\nimport TranslatedText from \"../../../translations/TranslatedText\";\n\n// applies delete and edit capabilities\nexport default (props: any) => {\n  const { dispatch } = useContext(QuizzContext) as IQuizzBuilderContext;\n\n  return (\n    <Popconfirm\n      arrowPointAtCenter\n      placement=\"bottom\"\n      onConfirm={() => dispatch(deleteElement(props.id))}\n      title={<TranslatedText id=\"confirm.action\" />}\n      okText={<TranslatedText id=\"btn.yes\" />}\n      cancelText={<TranslatedText id=\"btn.no\" />}\n    >\n      <Button type=\"danger\" icon=\"delete\" shape=\"circle\" />\n    </Popconfirm>\n  );\n};\n","import React from \"react\";\nimport Button, { ButtonProps } from \"antd/es/button/index\";\n\n// applies delete and edit capabilities\nexport default (props: ButtonProps) => {\n  return <Button type=\"primary\" icon=\"edit\" shape=\"circle\" {...props} />;\n};\n","import React from \"react\";\nimport { Button, Col } from \"antd\";\nimport TranslatedText from \"../../translations/TranslatedText\";\n\n// applies delete and edit capabilities\nexport default (props: any) => {\n  const { onClose, onSubmit } = props;\n\n  return (\n    <Col\n      span={24}\n      style={{\n        textAlign: \"right\"\n      }}\n    >\n      <Button onClick={onClose} style={{ marginRight: 8 }}>\n        <TranslatedText id=\"btn.cancel\" />\n      </Button>\n      <Button onClick={onSubmit} type=\"primary\">\n        <TranslatedText id=\"btn.save\" />\n      </Button>\n    </Col>\n  );\n};\n","import React, { memo } from \"react\";\nimport ISO6391 from \"iso-639-1\";\nimport { Dropdown, Button, Menu } from \"antd\";\nimport styles from \"../../../drawer.module.css\";\n\nconst { Item: MenuItem } = Menu;\nconst { getNativeName, getAllCodes } = ISO6391;\nconst ISO6391AllCodes = getAllCodes();\n\ninterface AddDropdownProps {\n  onChange?: (lnaguageCode: string) => void;\n  disabled?: string[];\n}\n\nfunction AddDropdown(props: AddDropdownProps) {\n  const { onChange, disabled } = props;\n\n  function onMenuItemClick({ key: lang }: any) {\n    if (onChange) {\n      onChange(lang);\n    }\n  }\n\n  const menu = (\n    <Menu onClick={onMenuItemClick}>\n      {ISO6391AllCodes.map(lang => (\n        <MenuItem\n          key={lang}\n          disabled={disabled ? disabled.includes(lang) : false}\n        >\n          {getNativeName(lang)}\n        </MenuItem>\n      ))}\n    </Menu>\n  );\n\n  return (\n    <Dropdown overlay={menu} overlayClassName={styles.dropdownLanguages}>\n      <Button icon=\"plus\" />\n    </Dropdown>\n  );\n}\n\nexport default memo(AddDropdown);\n","import React, { forwardRef } from \"react\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport { Tabs, Tooltip, Row, Popconfirm, Button } from \"antd\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"./quillFormInput.css\";\nimport ISO6391 from \"iso-639-1\";\nimport AddDropdown from \"./AddDropdown\";\nimport TranslatedText from \"../../../../../../../../translations/TranslatedText\";\n\nconst { TabPane } = Tabs;\nconst { getNativeName } = ISO6391;\n\nconst Size = Quill.import(\"attributors/style/size\");\nconst text_size = [\n  \"6px\",\n  \"7px\",\n  \"8px\",\n  \"9px\",\n  \"10px\",\n  \"10.5px\",\n  \"11px\",\n  \"12px\",\n  \"13px\",\n  \"14px\",\n  \"15px\",\n  \"16px\",\n  \"18px\",\n  \"20px\",\n  \"22px\",\n  \"24px\",\n  \"26px\",\n  \"28px\",\n  \"32px\",\n  \"36px\",\n  \"40px\",\n  \"44px\",\n  \"48px\",\n  \"54px\",\n  \"60px\",\n  \"66px\",\n  \"72px\",\n  \"80px\",\n  \"88px\",\n  \"96px\",\n];\nSize.whitelist = text_size;\nQuill.register(Size, true);\n\nconst modules = {\n  toolbar: {\n    container: [\n      [{ header: [1, 2, false] }, { font: [] }, { size: text_size }],\n      [{ color: [] }, { background: [] }],\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n      [\n        { list: \"ordered\" },\n        { list: \"bullet\" },\n        { indent: \"-1\" },\n        { indent: \"+1\" },\n      ],\n      [\"link\" /* 'image', 'video' */],\n      [\"clean\"],\n    ],\n  },\n};\n\nexport default forwardRef((props: any, ref) => {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    currentLanguage,\n    setLanguage,\n    onNewLanguage,\n    onRemoveLanguage,\n  } = props;\n  const questionLanguages: Array<string> = Object.keys(value);\n\n  function onChangeHandler(\n    content: string\n    // delta: Quill.Delta,\n    //  source: Quill.Sources,\n    // editor: UnprivilegedEditor\n  ) {\n    onChange({ ...value, [currentLanguage]: content });\n  }\n\n  function preventPropagation(e?: React.MouseEvent<HTMLElement, MouseEvent>) {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n  return (\n    <Tabs\n      ref={ref as any}\n      onChange={setLanguage}\n      activeKey={currentLanguage}\n      tabBarExtraContent={\n        <AddDropdown disabled={questionLanguages} onChange={onNewLanguage} />\n      }\n    >\n      {questionLanguages.map((lang) => (\n        <TabPane\n          // native language name\n          tab={\n            <Row>\n              <Tooltip title={lang}>{getNativeName(lang)}</Tooltip>\n              &nbsp;\n              {questionLanguages.length > 1 ? (\n                <Popconfirm\n                  title={<TranslatedText id=\"confirm.action\" />}\n                  okText={<TranslatedText id=\"btn.yes\" />}\n                  cancelText={<TranslatedText id=\"btn.no\" />}\n                  onConfirm={(e) => {\n                    preventPropagation(e);\n                    onRemoveLanguage(lang);\n                  }}\n                >\n                  <Button\n                    shape=\"circle\"\n                    icon=\"close\"\n                    size=\"small\"\n                    onClick={preventPropagation}\n                  />\n                </Popconfirm>\n              ) : null}\n            </Row>\n          }\n          key={lang}\n        >\n          <ReactQuill\n            theme=\"snow\"\n            placeholder=\"Question?\"\n            defaultValue={defaultValue}\n            value={value[currentLanguage] || \"\"}\n            onChange={onChangeHandler}\n            modules={modules}\n          />\n        </TabPane>\n      ))}\n    </Tabs>\n  );\n});\n","import React from \"react\";\nimport Icon from \"antd/es/icon\";\nimport Tooltip from \"antd/es/tooltip\";\n\nexport default ({ children, title }: any) => {\n  return (\n    <Tooltip title={title || \"empty\"}>\n      <Icon type=\"info-circle\" theme=\"twoTone\" />\n      &nbsp;\n      <span>{children}</span>\n    </Tooltip>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport BottomButtons from \"../../../../../../../../ReusableComponents/BottomButtons\";\nimport Button from \"antd/es/button/button\";\nimport Drawer from \"antd/es/drawer\";\nimport Input from \"antd/es/input/Input\";\nimport FormItem from \"antd/es/form/FormItem\";\nimport message from \"antd/es/message\";\nimport TextWithInfo from \"../../../../../../../../ReusableComponents/TextWithInfo\";\nimport ISO6391 from \"iso-639-1\";\nimport TranslatedText from \"../../../../../../../../translations/TranslatedText\";\n\nconst { getNativeName } = ISO6391;\n\nexport default ({ onAdd, languagesList, existingOptions }: any) => {\n  const [drawerVisibility, setDrawerVisibility] = useState(false);\n  const [newOption, setNewOption] = useState({ text: {} } as any);\n\n  // opens drawer when add button is clicked\n  function openDrawer() {\n    setDrawerVisibility(true);\n  }\n\n  // close drawer\n  function closeDrawer() {\n    setDrawerVisibility(false);\n  }\n\n  // on change input value | text\n  function onChangeInput(\n    e: React.ChangeEvent<HTMLInputElement>,\n    language?: string\n  ) {\n    const tempNewOption = { ...newOption };\n\n    if (language) {\n      tempNewOption[\"text\"][language] = e.target.value;\n    } else {\n      tempNewOption[\"value\"] = e.target.value;\n    }\n    setNewOption(tempNewOption);\n  }\n\n  // save new added option\n  function onSaveOption() {\n    const newOptionValue = newOption[\"value\"];\n    const newOptionListText = Object.values(newOption[\"text\"]);\n\n    // check if value already exists (iterates over existing options)\n    for (let index = 0; index < existingOptions.length; index++) {\n      const currentOptionValue = existingOptions[index][\"value\"];\n      if (newOptionValue === currentOptionValue) {\n        // error message for already existing value (values must be unique by question)\n        return message.error(\"Value already exists\");\n      }\n    }\n\n    if (newOptionListText.length === languagesList.length) {\n      // sends new option back with text(on each language) and value\n      onAdd(newOption);\n      // closes this drawer\n      closeDrawer();\n    } else {\n      // error message for required languages\n      message.error(\"All fields are required\");\n    }\n  }\n\n  return (\n    <Fragment>\n      <Button icon=\"plus\" onClick={openDrawer}>\n        <TranslatedText id=\"btn.add\" />\n      </Button>\n      <Drawer\n        title=\"Add New Option\"\n        width={150}\n        onClose={closeDrawer}\n        visible={drawerVisibility}\n        destroyOnClose\n      >\n        <FormItem label=\"Languages\">\n          {languagesList.map((language: string, i: number) => {\n            return (\n              <Fragment key={i}>\n                <TextWithInfo title={language}>\n                  {getNativeName(language)}\n                </TextWithInfo>\n                <Input onChange={e => onChangeInput(e, language)} />\n              </Fragment>\n            );\n          })}\n        </FormItem>\n        <FormItem label=\"Value\">\n          <Input onChange={onChangeInput} />\n        </FormItem>\n        <BottomButtons onClose={closeDrawer} onSubmit={onSaveOption} />\n      </Drawer>\n    </Fragment>\n  );\n};\n","import React, { forwardRef } from \"react\";\nimport Tabs from \"antd/es/tabs/index\";\nimport Row from \"antd/es/row/index\";\nimport Col from \"antd/es/col/index\";\nimport Input from \"antd/es/input/Input\";\nimport Button from \"antd/es/button/button\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport TextWithInfo from \"../../../../../../../../ReusableComponents/TextWithInfo\";\nimport AddInputOption from \"./AddInputOption\";\n\nconst { TabPane } = Tabs;\n\nexport default forwardRef((props: any, ref) => {\n  const {\n    value,\n    onChange,\n    currentLanguage,\n    setLanguage,\n    languagesList\n  } = props;\n\n  // handles on change ofr text and value\n  function onChangeInput(index: number, content: string, language?: string) {\n    const valueClone = cloneDeep(value);\n    if (language) {\n      // language exists means its text editing\n      valueClone[index][\"text\"][language] = content;\n    } else {\n      // value editing\n      valueClone[index][\"value\"] = content;\n    }\n\n    onChange(valueClone);\n  }\n\n  // handles delete option\n  function onDelete(index: number) {\n    const valueClone = cloneDeep(value);\n    // removes provided index\n    valueClone.splice(index, 1);\n\n    onChange(valueClone);\n  }\n\n  // on add new option\n  function onAddOption(newOption: object) {\n    const valueClone = cloneDeep(value);\n    valueClone.push(newOption);\n\n    onChange(valueClone);\n  }\n\n  return (\n    <Row>\n      <Row>\n        <AddInputOption\n          existingOptions={value}\n          languagesList={languagesList}\n          onAdd={onAddOption}\n        />\n      </Row>\n      <Row>\n        <Col xs={24} sm={12}>\n          <TextWithInfo\n            title={\n              <>\n                <p>Each option can be translated</p>\n                <p>Current Language:&nbsp;{currentLanguage}</p>\n              </>\n            }\n          >\n            Text:\n          </TextWithInfo>\n          {/* Text options */}\n          <Tabs\n            onChange={setLanguage}\n            activeKey={currentLanguage}\n            renderTabBar={() => <div />}\n          >\n            {languagesList.map((language: string) => (\n              <TabPane tab={language} key={language}>\n                {value.map((option: any, i: number) => (\n                  <Input\n                    key={i}\n                    value={option.text[language]}\n                    onChange={e => onChangeInput(i, e.target.value, language)}\n                  />\n                ))}\n              </TabPane>\n            ))}\n          </Tabs>\n        </Col>\n        <Col xs={24} sm={12}>\n          <TextWithInfo title=\"Value is hidden from user, and its the same betwen languages\">\n            Value:\n          </TextWithInfo>\n\n          {/* VALUES ARE THE SAME BETWEEN LANGUAGES */}\n          {value.map((option: any, i: number) => (\n            <Row key={i}>\n              <Col span={20}>\n                <Input\n                  value={option.value}\n                  onChange={e => onChangeInput(i, e.target.value)}\n                />\n              </Col>\n              <Col style={{ textAlign: \"center\" }} span={4}>\n                {i > 0 ? (\n                  /* only show delete button if not first option */\n                  <Button\n                    type=\"danger\"\n                    icon=\"delete\"\n                    shape=\"circle\"\n                    onClick={() => onDelete(i)}\n                  />\n                ) : null}\n              </Col>\n            </Row>\n          ))}\n        </Col>\n      </Row>\n    </Row>\n  );\n});\n","import React, { PureComponent } from \"react\";\nimport { FormComponentProps } from \"antd/lib/form/Form\";\nimport { Form, Checkbox } from \"antd\";\nimport QuillFormInput from \"./CustomFormInput/QuillFormInput\";\nimport TranslatedText from \"../../../../../../translations/TranslatedText\";\nimport OptionsInput from \"./CustomFormInput/OptionsInput/OptionsInput\";\nimport cloneDeep from \"lodash.clonedeep\";\n\n// this must be a class component because of parent components acessing the prop \"wrappedComponentRef\"\n// to be able to access form props and make a custom submit on parent for example.\ninterface DrawerFormProps extends FormComponentProps {\n  [k: string]: any;\n}\nclass DrawerForm extends PureComponent<DrawerFormProps, any> {\n  constructor(props: any) {\n    super(props);\n\n    const languagesList = Object.keys(props.inputData.questions);\n\n    this.state = {\n      languagesList,\n      currentLanguage: languagesList[0]\n    };\n  }\n\n  setLanguage = (currentLanguage: any) => {\n    this.setState({ currentLanguage });\n  };\n\n  onNewLanguage = (lang: string) => {\n    const { form, inputData } = this.props;\n    const { setFieldsValue, getFieldsValue } = form;\n\n    const fieldsNames = [\"questions\"];\n    if (inputData.options) {\n      fieldsNames.push(\"options\");\n    }\n    const { questions, options } = cloneDeep(getFieldsValue(fieldsNames));\n    questions[lang] = \"\";\n\n    if (options) {\n      for (let index = 0; index < options.length; index++) {\n        options[index].text[lang] = \"\";\n      }\n    }\n\n    setFieldsValue({ questions, options });\n    this.setState({\n      languagesList: Object.keys(questions)\n    });\n  };\n\n  onRemoveLanguage = (lang: string) => {\n    /* REMOVE LANGUAGE HERE */\n    const { form, inputData } = this.props;\n    const { setFieldsValue, getFieldsValue } = form;\n\n    const fieldsNames = [\"questions\"];\n    if (inputData.options) {\n      fieldsNames.push(\"options\");\n    }\n    const { questions, options } = cloneDeep(getFieldsValue(fieldsNames));\n\n    delete questions[lang];\n\n    if (options) {\n      for (let index = 0; index < options.length; index++) {\n        delete options[index].text[lang];\n      }\n    }\n    const listLanguages = Object.keys(questions);\n\n    this.setState(\n      {\n        currentLanguage: listLanguages[0],\n        languagesList: listLanguages\n      },\n      () => {\n        // fix's bug that some times one of the updates was lost\n        setFieldsValue({ questions, options });\n      }\n    );\n  };\n\n  render() {\n    const {\n        form,\n        // toolboxData,\n        inputData\n      } = this.props,\n      { currentLanguage, languagesList } = this.state,\n      { getFieldDecorator } = form,\n      { questions, required, options } = inputData;\n\n    return (\n      <Form layout=\"vertical\">\n        <Form.Item label={<TranslatedText id=\"settings.form.questions\" />}>\n          {getFieldDecorator(\"questions\", {\n            initialValue: questions,\n            rules: [{ required: true, message: \"Required field\" }]\n          })(\n            <QuillFormInput\n              currentLanguage={currentLanguage}\n              setLanguage={this.setLanguage}\n              onNewLanguage={this.onNewLanguage}\n              onRemoveLanguage={this.onRemoveLanguage}\n            />\n          )}\n        </Form.Item>\n\n        {options ? (\n          <Form.Item label={<TranslatedText id=\"settings.form.options\" />}>\n            {getFieldDecorator(\"options\", {\n              initialValue: options,\n              rules: [{ required: true, message: \"Required field\" }]\n            })(\n              <OptionsInput\n                languagesList={languagesList}\n                currentLanguage={currentLanguage}\n              />\n            )}\n          </Form.Item>\n        ) : null}\n\n        <Form.Item>\n          {getFieldDecorator(\"required\", {\n            initialValue: required,\n            valuePropName: \"checked\"\n          })(\n            <Checkbox>\n              <TranslatedText id=\"settings.form.required\" />\n            </Checkbox>\n          )}\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create<DrawerFormProps>()(DrawerForm);\n","import React, { useContext, useRef } from \"react\";\nimport { Drawer, Row } from \"antd\";\nimport BottomButtons from \"../../../../../ReusableComponents/BottomButtons\";\nimport SettingsForm from \"./SettingsForm/SettingsForm\";\nimport TranslatedText from \"../../../../../translations/TranslatedText\";\nimport QuizzContext, {\n  IQuizzBuilderContext\n} from \"../../../../../QuizzContext\";\nimport { patchElement } from \"../../../../reducer/actions\";\nimport styles from \"./drawer.module.css\";\n\n// applies delete and edit capabilities\nexport default function SettingsDrawer(props: any) {\n  const { closeDrawer, showDrawer, toolboxData, inputData } = props,\n    { dispatch } = useContext(QuizzContext) as IQuizzBuilderContext,\n    formRef = useRef() as any;\n\n  function onFormSubmit(e: Event) {\n    e.preventDefault();\n\n    // gets the form ref from child\n    const { validateFields } = formRef.current.props.form;\n    validateFields((err: any, values: any) => {\n      if (!err) {\n        // adds to reducer\n        dispatch(patchElement(inputData.id, values));\n        // close drawer had no errors\n        closeDrawer();\n      }\n    });\n  }\n\n  return (\n    <Drawer\n      title={<TranslatedText id={toolboxData.name} />}\n      onClose={closeDrawer}\n      visible={showDrawer}\n      destroyOnClose\n      className={styles.settingsForm}\n    >\n      <Row style={{ height: \"90%\", overflowY: \"auto\" }}>\n        <SettingsForm\n          wrappedComponentRef={formRef}\n          toolboxData={toolboxData}\n          inputData={inputData}\n        />\n      </Row>\n      <Row\n        type=\"flex\"\n        justify=\"space-between\"\n        align=\"bottom\"\n        style={{ height: \"10%\" }}\n      >\n        <BottomButtons onClose={closeDrawer} onSubmit={onFormSubmit} />\n      </Row>\n    </Drawer>\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport EditButton from \"./EditButton\";\nimport SideDrawer from \"./SideDrawer/index\";\n\n// applies delete and edit capabilities\nexport default (props: any) => {\n  const [showDrawer, setShowDrawer] = useState(false);\n\n  function openDrawer() {\n    setShowDrawer(true);\n  }\n\n  function closeDrawer() {\n    setShowDrawer(false);\n  }\n\n  return (\n    <Fragment>\n      <SideDrawer\n        {...props}\n        closeDrawer={closeDrawer}\n        showDrawer={showDrawer}\n      />\n      <EditButton onClick={openDrawer} />\n    </Fragment>\n  );\n};\n","import React from \"react\";\nimport Row from \"antd/es/row/index\";\nimport Col from \"antd/es/col/index\";\nimport DeleteButton from \"./DeleteButton\";\nimport EditElement from \"./EditElement/index\";\nimport TranslatedText from \"../../../translations/TranslatedText\";\n\n// applies delete and edit capabilities\nexport default (props: any) => {\n  const { toolboxData, inputData } = props;\n  return (\n    <div className=\"ElementWrapper\">\n      <Row>\n        <Col xs={24} sm={18}>\n          <TranslatedText id={toolboxData.name} />\n        </Col>\n        <Col xs={24} sm={6} style={{ textAlign: \"right\" }}>\n          <EditElement {...props} />\n          &nbsp;\n          <DeleteButton id={inputData.id} />\n        </Col>\n      </Row>\n      <Row>{props.children}</Row>\n    </div>\n  );\n};\n","import DnDWrapper from \"./DnDWrapper\";\nimport React, { useContext } from \"react\";\nimport Empty from \"antd/es/empty/index\";\nimport Form from \"antd/es/form/index\";\nimport QuizzContext, { IQuizzBuilderContext } from \"../../QuizzContext\";\nimport ElementWrapper from \"./ElementWrapper/ElementWrapper\";\nimport { moveElement } from \"../reducer/actions\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nfunction PreviewForm(props: any) {\n  const { state, toolBox, language, dispatch } = useContext(\n    QuizzContext\n  ) as IQuizzBuilderContext;\n  const { form } = props;\n  const form_data = state.get(\"data\");\n\n  function moveCard(dragIndex: number, hoverIndex: number) {\n    dispatch(moveElement(dragIndex, hoverIndex));\n  }\n\n  // shows the inputs from the toolbox that are added to the current builder state\n  return (\n    <Form>\n      <DndProvider backend={HTML5Backend}>\n        {form_data.map((item: any, i: number) => {\n          const current_key = item.element;\n          // searchs for the current input on the toolbox to get the component\n          const found_toolbox_input = toolBox.find(\n            (toolBoxInput: any) => current_key === toolBoxInput.key\n          ) as any;\n          // finds input and wrapps it with delete and edit button\n          const Component = found_toolbox_input\n            ? found_toolbox_input.Component\n            : Empty;\n\n          return (\n            <DnDWrapper\n              key={item.id}\n              index={i}\n              id={item.id}\n              moveCard={moveCard}\n            >\n              <ElementWrapper\n                // render the input wrapper with delete and edit button\n                toolboxData={found_toolbox_input}\n                inputData={item}\n                key={item.id}\n              >\n                <Component\n                  // render the toolbox component\n                  form={form}\n                  toolboxData={found_toolbox_input}\n                  inputData={item}\n                  language={language}\n                />\n              </ElementWrapper>\n            </DnDWrapper>\n          );\n        })}\n      </DndProvider>\n    </Form>\n  );\n}\n\nexport default Form.create()(PreviewForm);\n","import React, { useReducer, memo, useEffect } from \"react\";\nimport { reducer, initialState } from \"./reducer/reducer\";\nimport Row from \"antd/es/row/index\";\nimport Col from \"antd/es/col/index\";\nimport ToolBox from \"./ToolBoxContainer\";\nimport FormPreview from \"./FormPreview/FormPreview\";\nimport QuizzContext, { getDefaultContext } from \"../QuizzContext\";\nimport { usePrevious } from \"../customHooks\";\nimport isEqual from \"lodash.isequal\";\nimport \"../assets/FormBuilder.css\";\n\nexport default memo(function(props: any) {\n  const { onChange, initialValue, ...rest } = props,\n    [state, dispatch] = useReducer(reducer, initialState(initialValue)),\n    contextValue = {\n      ...getDefaultContext(rest),\n      state,\n      dispatch\n    },\n    formData = state.get(\"data\");\n  const previousFormData = usePrevious(formData);\n\n  // effect to set\n  useEffect(() => {\n    // effect to notify parent that form data had a diff\n    if (\n      typeof onChange === \"function\" &&\n      previousFormData &&\n      !isEqual(previousFormData, formData)\n    ) {\n      onChange(formData);\n    }\n  }, [onChange, formData, previousFormData]);\n\n  // creates two colons 1 with toolbox and the other with the added inputs\n  return (\n    <div className=\"react-quizzes-builder\">\n      <QuizzContext.Provider value={contextValue}>\n        <Row style={{ height: \"100%\" }}>\n          <Col sm={6} xs={24} order={0}>\n            <ToolBox />\n          </Col>\n          <Col xs={24} sm={18} order={1} style={{ height: \"100%\" }}>\n            <FormPreview />\n          </Col>\n        </Row>\n      </QuizzContext.Provider>\n    </div>\n  );\n});\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = <T extends {}>(value: T) => {\n  const ref = useRef<T>();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  return ref.current;\n};\n","import React, { PureComponent } from \"react\";\nimport QuizzContext, {\n  getDefaultContext,\n  IQuizzContext\n} from \"../QuizzContext\";\nimport TranslatedText from \"../translations/TranslatedText\";\nimport { Empty, Button, Form } from \"antd\";\n\nclass Quizz extends PureComponent<any, any> {\n  // submit handler\n  handleSubmit(e: React.MouseEvent<HTMLElement, MouseEvent>) {\n    e.preventDefault();\n    const { onSubmit, form } = this.props;\n\n    form.validateFields((err: any, values: any) => {\n      if (!err) {\n        if (typeof onSubmit === \"function\") {\n          // sends values to parent if has onSubmit\n          onSubmit(values);\n        }\n      }\n    });\n  }\n\n  static defaultProps = {\n    submitButton: true\n  };\n\n  render() {\n    const { form, data, submitButton, ...rest } = this.props,\n      contextValue = getDefaultContext(rest as IQuizzContext);\n    return (\n      <div className=\"react-quizzes-quizz\">\n        <QuizzContext.Provider value={contextValue}>\n          <Form className=\"react-quizzes-quizz\">\n            {data.map((item: any) => {\n              const current_key = item.element;\n              // searchs for the current input on the toolbox to get the component\n              const found_toolbox_input = contextValue[\"toolBox\"].find(\n                (toolBoxInput: any) => current_key === toolBoxInput.key\n              ) as any;\n              // finds input and wrapps it with delete and edit button\n              const Component = found_toolbox_input\n                ? found_toolbox_input.Component\n                : Empty;\n\n              return (\n                <Component\n                  // render the toolbox component\n                  key={item.id}\n                  form={form}\n                  toolboxData={found_toolbox_input}\n                  inputData={item}\n                  language={contextValue[\"language\"]}\n                />\n              );\n            })}\n            {submitButton ? (\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  onClick={this.handleSubmit.bind(this)}\n                >\n                  <TranslatedText id=\"btn.submit\" />\n                </Button>\n              </Form.Item>\n            ) : null}\n          </Form>\n        </QuizzContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default Form.create<any>()(Quizz);\n","import \"./assets/antd.css\";\nimport \"./assets/FormBuilder.css\";\nimport { Button, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Quiz, QuizzBuilder } from \"./App\";\nimport ReactDOM from \"react-dom\";\n\nfunction DevStart() {\n  const [formdata, setFormData] = useState([]);\n  const [modalVisibility, setModalVisibility] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Button onClick={() => setModalVisibility(true)}>Preview Form</Button>\n      <Modal\n        title=\"Preview Form\"\n        style={{ top: 20 }}\n        visible={modalVisibility}\n        onCancel={() => setModalVisibility(false)}\n        destroyOnClose\n      >\n        <Quiz\n          data={formdata}\n          onSubmit={(values: any) => console.log(\"form submit values\", values)}\n        />\n      </Modal>\n      <QuizzBuilder onChange={setFormData} />\n    </div>\n  );\n}\n\nReactDOM.render(<DevStart />, document.getElementById(\"root\"));\n"],"sourceRoot":""}