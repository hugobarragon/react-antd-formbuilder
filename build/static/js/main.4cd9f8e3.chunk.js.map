{"version":3,"sources":["QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/drawer.module.css","QuizzBuilder/reducer/reducer.ts","translations/TranslatedText.tsx","ToolBox/Components/TextInput.tsx","ToolBox/Components/HeaderText.tsx","ToolBox/Components/Label.tsx","ToolBox/Components/Divider.tsx","ToolBox/Components/Select.tsx","ToolBox/Components/Tags.tsx","ToolBox/Components/Checkboxes.tsx","ToolBox/Components/RadioButtons.tsx","ToolBox/Components/NumberInput.tsx","ToolBox/Components/MultiLineInput.tsx","ToolBox/Components/Rate.tsx","ToolBox/Components/DatePicker.tsx","ToolBox/CustomIcons/radiobuttonicon.tsx","ToolBox/CustomIcons/headericon.tsx","ToolBox/CustomIcons/inputIcon.tsx","ToolBox/CustomIcons/numberInputIcon.tsx","ToolBox/CustomIcons/multiLineInputIcon.tsx","ToolBox/index.tsx","QuizzContext.tsx","QuizzBuilder/ToolBoxContainer.tsx","QuizzBuilder/reducer/actions.ts","QuizzBuilder/FormPreview/ElementWrapper/DeleteButton.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/EditButton.tsx","ReusableComponents/BottomButtons/index.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/CustomFormInput/QuillFormInput/AddDropdown.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/CustomFormInput/QuillFormInput/index.tsx","ReusableComponents/TextWithInfo.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/CustomFormInput/OptionsInput/AddInputOption.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/CustomFormInput/OptionsInput/OptionsInput.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/SettingsForm/SettingsForm.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/SideDrawer/index.tsx","QuizzBuilder/FormPreview/ElementWrapper/EditElement/index.tsx","QuizzBuilder/FormPreview/ElementWrapper/ElementWrapper.tsx","QuizzBuilder/FormPreview/FormPreview.tsx","QuizzBuilder/FormBuilder.tsx","customHooks.ts","Quiz/Quiz.tsx","QuizExample.tsx","index.tsx"],"names":["module","exports","mapClone","map","clonedeep","reducer","state","action","type","new_state","new_data","get","item","push","set","id","index","length","splice","newitem","element","Object","assign","Error","validate","ISO6391","defaultMessages","en","memo","props","useContext","QuizzContext","messages","language","no_language_error","console","error","hasOwnProperty","translated_message","className","forwardRef","ref","form","inputData","required","questions","defaultValue","getFieldDecorator","FormItem","colon","label","dangerouslySetInnerHTML","__html","initialValue","rules","message","Input","SelectOption","Select","Option","options","option","value","style","whiteSpace","key","text","mode","CheckboxGroup","Checkbox","Group","autoSize","allowHalf","viewBox","width","height","fill","d","p-id","_defaultItems","pt","name","icon","component","headerIcon","field_name","Component","HeaderText","Label","Divider","Tags","Checkboxes","radioButtonIcon","RadioButtons","inputIcon","TextInput","numberInputIcon","NumberInput","multiLineInputIcon","MultiLineInput","Rate","DatePicker","getDefaultContext","toolBox","defaulttoolBox","createContext","ListItem","List","Item","ListItemMeta","Meta","dispatch","itemLayout","margin","dataSource","renderItem","onClick","elementOptions","uuidV4","addElement","onClickHandler","avatar","title","description","arrowPointAtCenter","placement","onConfirm","okText","cancelText","shape","onClose","onSubmit","span","textAlign","marginRight","MenuItem","Menu","getNativeName","ISO6391AllCodes","getAllCodes","onChange","disabled","menu","lang","includes","overlay","overlayClassName","styles","dropdownLanguages","TabPane","Tabs","Size","Quill","import","text_size","whitelist","register","modules","toolbar","container","header","font","size","color","background","list","indent","currentLanguage","setLanguage","onNewLanguage","onRemoveLanguage","questionLanguages","keys","onChangeHandler","content","preventPropagation","e","stopPropagation","preventDefault","activeKey","tabBarExtraContent","tab","theme","placeholder","children","onAdd","languagesList","existingOptions","useState","drawerVisibility","setDrawerVisibility","newOption","setNewOption","closeDrawer","onChangeInput","tempNewOption","target","visible","destroyOnClose","i","TextWithInfo","BottomButtons","newOptionValue","newOptionListText","values","valueClone","cloneDeep","AddInputOption","xs","sm","renderTabBar","onDelete","DrawerForm","setState","setFieldsValue","getFieldsValue","fieldsNames","listLanguages","this","layout","QuillFormInput","OptionsInput","valuePropName","PureComponent","Form","create","SettingsDrawer","showDrawer","toolboxData","formRef","useRef","settingsForm","overflowY","SettingsForm","wrappedComponentRef","justify","align","validateFields","current","err","setShowDrawer","EditButton","EditElement","DeleteButton","form_data","current_key","found_toolbox_input","find","toolBoxInput","Empty","ElementWrapper","rest","useReducer","Map","initialState","contextValue","formData","previousFormData","useEffect","usePrevious","isEqual","Provider","order","FormPreview","Quizz","data","submitButton","htmlType","handleSubmit","bind","defaultProps","modalVisibility","setModalVisibility","top","onCancel","Quiz","log","App","formdata","setFormData","QuizExample","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4cd9f8e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsForm\":\"drawer_settingsForm__3C6bd\",\"dropdownLanguages\":\"drawer_dropdownLanguages__38VhX\"};","import { IActions } from \"./actions\";\r\nimport clonedeep from \"lodash.clonedeep\";\r\n\r\ntype Maptype = Map<string, any>;\r\n\r\nfunction mapClone(map: Maptype) {\r\n  return clonedeep(map);\r\n}\r\n\r\nexport const initialState = (initialValue: any) =>\r\n  new Map<string, any>([[\"data\", initialValue || []]]);\r\n\r\nexport type IState = ReturnType<typeof initialState>;\r\n\r\nexport function reducer(state: IState, action: IActions) {\r\n  switch (action.type) {\r\n    case \"ADD_ELEMENT\": {\r\n      const new_state = mapClone(state),\r\n        new_data = new_state.get(\"data\");\r\n      const { item } = action;\r\n      new_data.push(item);\r\n\r\n      return new_state.set(\"data\", new_data);\r\n    }\r\n\r\n    case \"DELETE_ELEMENT\": {\r\n      const new_state = mapClone(state),\r\n        new_data = new_state.get(\"data\"),\r\n        { id } = action;\r\n\r\n      for (let index = 0; index < new_data.length; index++) {\r\n        const element = new_data[index];\r\n        if (element[\"id\"] === id) {\r\n          // if it finds equal id on list deletes it\r\n          new_data.splice(index, 1);\r\n        }\r\n      }\r\n\r\n      return new_state.set(\"data\", new_data);\r\n    }\r\n\r\n    case \"PATCH_ELEMENT\": {\r\n      const new_state = mapClone(state),\r\n        new_data = new_state.get(\"data\"),\r\n        { id, newitem } = action;\r\n\r\n      for (let index = 0; index < new_data.length; index++) {\r\n        const element = new_data[index];\r\n        if (element[\"id\"] === id) {\r\n          // if it finds equal id on list updates it\r\n          new_data[index] = Object.assign(element, newitem);\r\n          break;\r\n        }\r\n      }\r\n\r\n      return new_state.set(\"data\", new_data);\r\n    }\r\n\r\n    default:\r\n      throw new Error(\"unkown reducer action type\");\r\n  }\r\n}\r\n","import React, { useContext, memo } from \"react\";\r\nimport QuizzContext from \"../QuizzContext\";\r\nimport ISO6391 from \"iso-639-1\";\r\nimport en from \"./messages/en.json\";\r\n\r\nconst { validate } = ISO6391;\r\n\r\ninterface IdMessage {\r\n  [key: string]: string;\r\n}\r\nexport interface MessagesRecord {\r\n  [key: string]: IdMessage;\r\n}\r\n\r\nexport const defaultMessages: MessagesRecord = {\r\n  en: en\r\n};\r\n\r\nfunction TranslatedText(props: { id: string }) {\r\n  const { id } = props,\r\n    { messages, language } = useContext(QuizzContext);\r\n\r\n  // checks valid language\r\n  if (typeof language !== \"string\" || !validate(language)) {\r\n    const no_language_error =\r\n      \"language supplied not string or not complience with ISO\";\r\n    console.error(no_language_error);\r\n    throw no_language_error;\r\n  }\r\n\r\n  // checks valid messages\r\n  if (typeof messages !== \"object\" || !messages.hasOwnProperty(language)) {\r\n    const no_language_in_messages_error =\r\n      \"messages not object or does not include current language\";\r\n    console.error(no_language_in_messages_error);\r\n    throw no_language_in_messages_error;\r\n  }\r\n  let translated_message = \"\";\r\n  // checks valid id\r\n  if (!messages[language].hasOwnProperty(id)) {\r\n    const no_id = \"id not found in current language messages\";\r\n    console.error(no_id);\r\n    translated_message = id;\r\n    // throw no_id;\r\n  } else {\r\n    translated_message = messages[language][id];\r\n  }\r\n\r\n  return <span className=\"translated\">{translated_message}</span>;\r\n}\r\n\r\nexport default memo(TranslatedText);\r\n","import React, { forwardRef } from \"react\";\r\nimport Input from \"antd/es/input/Input\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { form, inputData, language } = props,\r\n    { required, questions, id, defaultValue } = inputData,\r\n    { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {getFieldDecorator(id, {\r\n        initialValue: defaultValue,\r\n        rules: [\r\n          {\r\n            required,\r\n            message: \"Required Field\"\r\n          }\r\n        ]\r\n      })(<Input ref={ref} />)}\r\n    </FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { inputData, language } = props,\r\n    { questions } = inputData;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <h1\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    ></FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { inputData, language } = props,\r\n    { questions } = inputData;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    ></FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\nimport Divider from \"antd/es/divider/index\";\r\n\r\nexport default forwardRef(() => {\r\n  return (\r\n    <FormItem colon={false}>\r\n      <Divider />\r\n    </FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport Select from \"antd/es/select/index\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst SelectOption = Select.Option;\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { form, inputData, language } = props,\r\n    { required, questions, defaultValue, id, options } = inputData,\r\n    { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {getFieldDecorator(id, {\r\n        initialValue: defaultValue,\r\n        rules: [\r\n          {\r\n            required,\r\n            message: \"Required Field\"\r\n          }\r\n        ]\r\n      })(\r\n        <Select >\r\n          {options.map((option: any) => {\r\n            return (\r\n              <SelectOption\r\n                value={option.value}\r\n                // on long answers removes \"...\" and makes break line, makes possible to see all answer\r\n                style={{ whiteSpace: \"normal\" }}\r\n                key={option.value}\r\n              >\r\n                {option.text[language]}\r\n              </SelectOption>\r\n            );\r\n          })}\r\n        </Select>\r\n      )}\r\n    </FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport Select from \"antd/es/select/index\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst SelectOption = Select.Option;\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { form, inputData, language } = props,\r\n    { required, questions, defaultValue, id, options } = inputData,\r\n    { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {getFieldDecorator(id, {\r\n        initialValue: defaultValue,\r\n        rules: [\r\n          {\r\n            required,\r\n            message: \"Required Field\"\r\n          }\r\n        ]\r\n      })(\r\n        <Select mode=\"tags\" >\r\n          {options.map((option: any) => {\r\n            return (\r\n              <SelectOption value={option.value} key={option.value}>\r\n                {option.text[language]}\r\n              </SelectOption>\r\n            );\r\n          })}\r\n        </Select>\r\n      )}\r\n    </FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport Checkbox from \"antd/es/checkbox/index\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { form, inputData, language } = props,\r\n    { required, questions, defaultValue, id, options } = inputData,\r\n    { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {getFieldDecorator(id, {\r\n        initialValue: defaultValue,\r\n        rules: [\r\n          {\r\n            required,\r\n            message: \"Required Field\"\r\n          }\r\n        ]\r\n      })(\r\n        <CheckboxGroup>\r\n          {options.map((option: any) => (\r\n            <Checkbox value={option.value} key={option.value}>\r\n              {option.text[language]}\r\n            </Checkbox>\r\n          ))}\r\n        </CheckboxGroup>\r\n      )}\r\n    </FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport RadioGroup from \"antd/es/radio/group\";\r\nimport Radio from \"antd/es/radio/radio\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { form, inputData, language } = props,\r\n    { required, questions, defaultValue, id, options } = inputData,\r\n    { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {getFieldDecorator(id, {\r\n        initialValue: defaultValue,\r\n        rules: [\r\n          {\r\n            required,\r\n            message: \"Required Field\"\r\n          }\r\n        ]\r\n      })(\r\n        <RadioGroup>\r\n          {options.map((option: any) => (\r\n            <Radio\r\n              key={option.value}\r\n              value={option.value}\r\n              style={{\r\n                // on long answers makes breakline so it does not overflow\r\n                whiteSpace: \"normal\"\r\n              }}\r\n            >\r\n              {option.text[language]}\r\n            </Radio>\r\n          ))}\r\n        </RadioGroup>\r\n      )}\r\n    </FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport NumberInput from \"antd/es/input-number/index\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { form, inputData, language } = props,\r\n    { required, questions, id, defaultValue } = inputData,\r\n    { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {getFieldDecorator(id, {\r\n        initialValue: defaultValue,\r\n        rules: [\r\n          {\r\n            required,\r\n            message: \"Required Field\"\r\n          }\r\n        ]\r\n      })(<NumberInput ref={ref} />)}\r\n    </FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport InputTextArea from \"antd/es/input/TextArea\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { form, inputData, language } = props,\r\n    { required, questions, id, defaultValue } = inputData,\r\n    { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {getFieldDecorator(id, {\r\n        initialValue: defaultValue,\r\n        rules: [\r\n          {\r\n            required,\r\n            message: \"Required Field\"\r\n          }\r\n        ]\r\n      })(<InputTextArea ref={ref} autoSize />)}\r\n    </FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport Rate from \"antd/es/rate/index\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { form, inputData, language } = props,\r\n    { required, questions, id, defaultValue } = inputData,\r\n    { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {getFieldDecorator(id, {\r\n        initialValue: defaultValue,\r\n        rules: [\r\n          {\r\n            required,\r\n            message: \"Required Field\"\r\n          }\r\n        ]\r\n      })(<Rate ref={ref} allowHalf />)}\r\n    </FormItem>\r\n  );\r\n});\r\n","import React, { forwardRef } from \"react\";\r\nimport DatePicker from \"antd/es/date-picker/index\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nexport default forwardRef((props: any, ref: any) => {\r\n  const { form, inputData, language } = props,\r\n    { required, questions, id, defaultValue } = inputData,\r\n    { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <FormItem\r\n      colon={false}\r\n      label={\r\n        <label\r\n          dangerouslySetInnerHTML={{\r\n            __html: questions[language] || \"no question for selected language\"\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {getFieldDecorator(id, {\r\n        initialValue: defaultValue,\r\n        rules: [\r\n          {\r\n            required,\r\n            message: \"Required Field\"\r\n          }\r\n        ]\r\n      })(<DatePicker /* ref={ref} isClearable */ />)}\r\n    </FormItem>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <svg\r\n      viewBox=\"64 64 896 896\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <defs>\r\n        <style type=\"text/css\"></style>\r\n      </defs>\r\n      <path\r\n        d=\"M506.892 81.849c-241.603 0-439.276 197.674-439.276 439.276 0 241.598 197.674 439.271 439.276 439.271 241.598 0 439.269-197.674 439.269-439.271 0-241.603-197.674-439.276-439.269-439.276z m0 834.618c-219.637 0-395.348-175.709-395.348-395.342 0-219.637 175.709-395.348 395.348-395.348 219.633 0 395.342 175.709 395.342 395.348-0.001 219.633-175.711 395.342-395.342 395.342z m0 0z\"\r\n        p-id=\"2146\"\r\n        fill=\"\"\r\n      ></path>\r\n      <path\r\n        d=\"M287.253 521.124c0 28.751 5.714 57.488 16.719 84.049 11.002 26.562 27.28 50.929 47.611 71.255 20.331 20.331 44.69 36.609 71.255 47.612 26.559 11.006 55.301 16.718 84.053 16.718 28.751 0 57.488-5.714 84.049-16.718 26.562-11.003 50.929-27.282 71.255-47.612 20.331-20.327 36.609-44.69 47.612-71.255 11.006-26.56 16.718-55.299 16.718-84.049 0-28.752-5.714-57.494-16.718-84.053-11.003-26.563-27.282-50.925-47.612-71.255-20.327-20.331-44.69-36.609-71.255-47.611-26.56-11.007-55.299-16.719-84.049-16.719-28.752 0-57.494 5.714-84.053 16.719-26.563 11.002-50.925 27.28-71.255 47.611-20.331 20.331-36.609 44.69-47.611 71.255-11.007 26.559-16.719 55.301-16.719 84.053z m0 0z\"\r\n        p-id=\"2147\"\r\n        fill=\"\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <svg\r\n      viewBox=\"64 64 896 896\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <defs>\r\n        <style type=\"text/css\"></style>\r\n      </defs>\r\n      <path\r\n        d=\"M961.142857 950.857143q-25.142857 0-75.714286-2T809.142857 946.857143q-25.142857 0-75.428571 2t-75.428572 2q-13.714286 0-21.142857-11.714286t-7.428571-26q0-17.714286 9.714285-26.285714t22.285715-9.714286 29.142857-4 25.714286-8.571428q18.857143-12 18.857142-80l-0.571428-223.428572q0-12-0.571429-17.714286-7.428571-2.285714-28.571428-2.285714H320q-21.714286 0-29.142857 2.285714-0.571429 5.714286-0.571429 17.714286l-0.571428 212q0 81.142857 21.142857 93.714286 9.142857 5.714286 27.428571 7.428571t32.571429 2 25.714286 8.571429 11.428571 26q0 14.857143-7.142857 27.428571t-20.857143 12.571429q-26.857143 0-79.714286-2T221.142857 946.857143q-24.571429 0-73.142857 2t-72.571429 2q-13.142857 0-20.285714-12T48 913.142857q0-17.142857 8.857143-25.714286t20.571428-10 27.142858-4.285714 24-8.571428q18.857143-13.142857 18.857142-81.714286l-0.571428-32.571429V285.714286q0-1.714286 0.285714-14.857143t0-20.857143T146.285714 228t-2-24-3.714285-20.857143-6.285715-18-9.142857-10.285714q-8.571429-5.714286-25.714286-6.857143t-30.285714-1.142857-23.428571-8-10.285715-25.714286q0-14.857143 6.857143-27.428571t20.571429-12.571429q26.285714 0 79.142857 2T221.142857 77.142857q24 0 72.285714-2T365.714286 73.142857q14.285714 0 21.428571 12.571429t7.142857 27.428571q0 17.142857-9.714285 24.857143T362.571429 146.285714t-28.285715 2.285715-24.571428 7.428571q-20 12-20 91.428571l0.571428 182.857143q0 12 0.571429 18.285715 7.428571 1.714286 22.285714 1.714285h399.428572q14.285714 0 21.714285-1.714285 0.571429-6.285714 0.571429-18.285715l0.571428-182.857143q0-79.428571-20-91.428571-10.285714-6.285714-33.428571-7.142857t-37.714286-7.428572T629.714286 113.142857q0-14.857143 7.142857-27.428571t21.428571-12.571429q25.142857 0 75.428572 2t75.428571 2q24.571429 0 73.714286-2t73.714286-2q14.285714 0 21.428571 12.571429t7.142857 27.428571q0 17.142857-10 25.142857t-22.857143 8.285715-29.428571 1.714285-25.142857 7.142857q-20 13.142857-20 92l0.571428 538.857143q0 68 19.428572 80 9.142857 5.714286 26.285714 7.714286t30.571429 2.571429 23.714285 8.857142 10.285715 25.428572q0 14.857143-6.857143 27.428571t-20.571429 12.571429z\"\r\n        p-id=\"2691\"\r\n        fill=\"\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <svg\r\n      viewBox=\"64 64 896 896\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <defs>\r\n        <style type=\"text/css\"></style>\r\n      </defs>\r\n      <path\r\n        d=\"M85.333333 170.666667v682.666666h853.333334V170.666667H85.333333zM0 85.333333h1024v853.333334H0V85.333333z m298.666667 640h42.666666v42.666667H213.333333v-42.666667h42.666667V298.666667H213.333333V256h128v42.666667H298.666667v426.666666z\"\r\n        p-id=\"6364\"\r\n        fill=\"\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <svg\r\n      viewBox=\"64 64 896 896\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <defs>\r\n        <style type=\"text/css\"></style>\r\n      </defs>\r\n      <path\r\n        d=\"M279.272727 791.272727h512a46.545455 46.545455 0 0 1 0 93.090909H279.272727a46.545455 46.545455 0 0 1 0-93.090909z m33.838546-617.984V651.636364H193.722182V395.170909c0-37.003636-0.884364-59.298909-2.653091-66.746182a24.948364 24.948364 0 0 0-14.615273-16.989091c-8.005818-3.863273-25.786182-5.771636-53.341091-5.771636h-11.822545v-55.854545c57.716364-12.381091 101.562182-37.888 131.490909-76.520728h70.283636z m303.709091 396.8V651.636364H354.164364v-68.235637c77.777455-127.255273 124.043636-206.010182 138.705454-236.218182 14.661818-30.254545 22.016-53.853091 22.016-70.74909 0-13.032727-2.234182-22.714182-6.656-29.137455-4.421818-6.376727-11.170909-9.588364-20.247273-9.588364a22.248727 22.248727 0 0 0-20.200727 10.612364c-4.468364 7.121455-6.656 21.178182-6.656 42.263273v45.521454H354.164364v-17.454545c0-26.763636 1.396364-47.941818 4.142545-63.348364 2.746182-15.499636 9.541818-30.72 20.386909-45.661091 10.798545-14.987636 24.901818-26.298182 42.216727-33.978182 17.361455-7.68 38.167273-11.543273 62.37091-11.543272 47.476364 0 83.316364 11.776 107.706181 35.328 24.296727 23.552 36.445091 53.341091 36.445091 89.367272 0 27.368727-6.842182 56.32-20.48 86.853819-13.730909 30.533818-54.039273 95.325091-121.018182 194.420363h130.885819z m270.615272-189.393454c18.152727 6.097455 31.650909 16.104727 40.494546 29.975272 8.843636 13.917091 13.312 46.452364 13.312 97.652364 0 38.027636-4.328727 67.490909-13.032727 88.529455-8.657455 20.945455-23.598545 36.910545-44.869819 47.848727-21.271273 10.938182-48.593455 16.384-81.873454 16.384-37.794909 0-67.490909-6.330182-89.088-19.083636-21.550545-12.660364-35.746909-28.253091-42.542546-46.638546-6.795636-18.432-10.193455-50.362182-10.193454-95.883636v-37.841455h119.389091v77.730909c0 20.666182 1.210182 33.838545 3.723636 39.424 2.420364 5.585455 7.912727 8.424727 16.337455 8.424728 9.309091 0 15.36-3.537455 18.338909-10.612364 2.932364-7.121455 4.421818-25.6 4.421818-55.575273v-33.047273c0-18.338909-2.048-31.744-6.190546-40.215272a30.72 30.72 0 0 0-18.338909-16.709818c-8.052364-2.653091-23.738182-4.189091-46.964363-4.561455V357.050182c28.392727 0 45.893818-1.070545 52.596363-3.258182a22.946909 22.946909 0 0 0 14.475637-14.149818c2.932364-7.307636 4.421818-18.711273 4.421818-34.257455v-26.624c0-16.756364-1.722182-27.741091-5.12-33.047272-3.490909-5.352727-8.843636-8.005818-16.151273-8.005819-8.285091 0-13.963636 2.792727-16.989091 8.378182-3.025455 5.632-4.561455 17.640727-4.561454 35.933091v39.284364h-119.389091v-40.773818c0-45.661091 10.472727-76.567273 31.325091-92.625455 20.898909-16.058182 54.085818-24.064 99.607272-24.064 56.878545 0 95.511273 11.170909 115.805091 33.373091 20.293818 22.248727 30.394182 53.201455 30.394182 92.765091 0 26.810182-3.630545 46.173091-10.891636 58.088727-7.307636 11.915636-20.107636 22.807273-38.446546 32.628364z\"\r\n        p-id=\"5557\"\r\n        fill=\"\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <svg\r\n      viewBox=\"64 64 896 896\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <defs>\r\n        <style type=\"text/css\"></style>\r\n      </defs>\r\n      <path\r\n        d=\"M64 832m64 0l768 0q64 0 64 64l0 0q0 64-64 64l-768 0q-64 0-64-64l0 0q0-64 64-64Z\"\r\n        p-id=\"6718\"\r\n        fill=\"\"\r\n      ></path>\r\n      <path\r\n        d=\"M64 64m64 0l256 0q64 0 64 64l0 0q0 64-64 64l-256 0q-64 0-64-64l0 0q0-64 64-64Z\"\r\n        p-id=\"6719\"\r\n        fill=\"\"\r\n      ></path>\r\n      <path\r\n        d=\"M192 192h128v320a64 64 0 0 1-64 64 64 64 0 0 1-64-64V192z\"\r\n        p-id=\"6720\"\r\n        fill=\"\"\r\n      ></path>\r\n      <path\r\n        d=\"M576 64m64 0l256 0q64 0 64 64l0 0q0 64-64 64l-256 0q-64 0-64-64l0 0q0-64 64-64Z\"\r\n        p-id=\"6721\"\r\n        fill=\"\"\r\n      ></path>\r\n      <path\r\n        d=\"M576 448m64 0l256 0q64 0 64 64l0 0q0 64-64 64l-256 0q-64 0-64-64l0 0q0-64 64-64Z\"\r\n        p-id=\"6722\"\r\n        fill=\"\"\r\n      ></path>\r\n      <path\r\n        d=\"M576 256m64 0l256 0q64 0 64 64l0 0q0 64-64 64l-256 0q-64 0-64-64l0 0q0-64 64-64Z\"\r\n        p-id=\"6723\"\r\n        fill=\"\"\r\n      ></path>\r\n      <path\r\n        d=\"M64 640m64 0l768 0q64 0 64 64l0 0q0 64-64 64l-768 0q-64 0-64-64l0 0q0-64 64-64Z\"\r\n        p-id=\"6724\"\r\n        fill=\"\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Avatar from \"antd/es/avatar/index\";\r\nimport Icon from \"antd/es/icon/index\";\r\nimport TextInput from \"./Components/TextInput\";\r\nimport HeaderText from \"./Components/HeaderText\";\r\nimport Label from \"./Components/Label\";\r\nimport Divider from \"./Components/Divider\";\r\nimport Select from \"./Components/Select\";\r\nimport Tags from \"./Components/Tags\";\r\nimport Checkboxes from \"./Components/Checkboxes\";\r\nimport RadioButtons from \"./Components/RadioButtons\";\r\nimport NumberInput from \"./Components/NumberInput\";\r\nimport MultiLineInput from \"./Components/MultiLineInput\";\r\nimport Rate from \"./Components/Rate\";\r\nimport DatePicker from \"./Components/DatePicker\";\r\n\r\nimport radioButtonIcon from \"./CustomIcons/radiobuttonicon\";\r\nimport headerIcon from \"./CustomIcons/headericon\";\r\nimport inputIcon from \"./CustomIcons/inputIcon\";\r\nimport numberInputIcon from \"./CustomIcons/numberInputIcon\";\r\nimport multiLineInputIcon from \"./CustomIcons/multiLineInputIcon\";\r\n\r\nfunction _defaultItems() {\r\n  // deafult sample question\r\n  const questions = {\r\n    en: \"Sample question ?\",\r\n    pt: \"Pergunta exemplo ?\"\r\n  };\r\n\r\n  const options = [\r\n    {\r\n      value: \"1\",\r\n      text: { ...questions }\r\n    },\r\n    {\r\n      value: \"2\",\r\n      text: { ...questions }\r\n    }\r\n  ];\r\n\r\n  return [\r\n    {\r\n      key: \"HeaderText\",\r\n      name: \"toolbox.headertext.name\", // id of translation\r\n      questions,\r\n      // description: \"toolbox.headertext.description\", // desciption under input on toolbox\r\n      icon: (\r\n        <Avatar>\r\n          <Icon component={headerIcon} />\r\n        </Avatar>\r\n      ), // this will go to Dom so can be string|| jsx component\r\n      field_name: \"header_text_\", // will add a generated uuidv4\r\n      Component: HeaderText // component not instanciated\r\n    },\r\n    {\r\n      key: \"LabelText\",\r\n      name: \"toolbox.label.name\", // id of translation\r\n      questions,\r\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\r\n      icon: <Avatar icon=\"font-colors\" />, // this will go to Dom so can be string|| jsx component\r\n      field_name: \"label_\", // will add a generated uuidv4\r\n      Component: Label // component not instanciated\r\n    },\r\n    {\r\n      key: \"Divider\",\r\n      name: \"toolbox.divider.name\", // id of translation\r\n      questions,\r\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\r\n      icon: <Avatar icon=\"line\" />, // this will go to Dom so can be string|| jsx component\r\n      field_name: \"divider_\", // will add a generated uuidv4\r\n      Component: Divider // component not instanciated\r\n    },\r\n    {\r\n      key: \"Select\",\r\n      name: \"toolbox.select.name\", // id of translation\r\n      questions,\r\n      options,\r\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\r\n      icon: <Avatar icon=\"down-square\" />, // this will go to Dom so can be string|| jsx component\r\n      field_name: \"select_\", // will add a generated uuidv4\r\n      Component: Select // component not instanciated\r\n    },\r\n    {\r\n      key: \"Tags\",\r\n      name: \"toolbox.tags.name\", // id of translation\r\n      questions,\r\n      options,\r\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\r\n      icon: <Avatar icon=\"tags\" />, // this will go to Dom so can be string|| jsx component\r\n      field_name: \"tags_\", // will add a generated uuidv4\r\n      Component: Tags // component not instanciated\r\n    },\r\n    {\r\n      key: \"Checkboxes\",\r\n      name: \"toolbox.checkboxes.name\", // id of translation\r\n      questions,\r\n      options,\r\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\r\n      icon: <Avatar icon=\"check-circle\" />, // this will go to Dom so can be string|| jsx component\r\n      field_name: \"checkboxes_\", // will add a generated uuidv4\r\n      Component: Checkboxes // component not instanciated\r\n    },\r\n    {\r\n      key: \"RadioButtons\",\r\n      name: \"toolbox.radiobuttons.name\", // id of translation\r\n      questions,\r\n      options,\r\n      // description: \"toolbox.label.description\", // desciption under input on toolbox\r\n      icon: (\r\n        <Avatar>\r\n          <Icon component={radioButtonIcon} />\r\n        </Avatar>\r\n      ), // this will go to Dom so can be string|| jsx component\r\n      field_name: \"radiobuttons_\", // will add a generated uuidv4\r\n      Component: RadioButtons // component not instanciated\r\n    },\r\n    {\r\n      key: \"TextInput\",\r\n      name: \"toolbox.textinput.name\", // id of translation\r\n      questions,\r\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\r\n      icon: (\r\n        <Avatar>\r\n          <Icon component={inputIcon} />\r\n        </Avatar>\r\n      ), // this will go to Dom so can be string|| jsx component\r\n      field_name: \"textinput_\", // will add a generated uuidv4\r\n      Component: TextInput // component not instanciated\r\n    },\r\n    {\r\n      key: \"NumberInput\",\r\n      name: \"toolbox.numberinput.name\", // id of translation\r\n      questions,\r\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\r\n      icon: (\r\n        <Avatar>\r\n          <Icon component={numberInputIcon} />\r\n        </Avatar>\r\n      ), // this will go to Dom so can be string|| jsx component\r\n      field_name: \"numberinput_\", // will add a generated uuidv4\r\n      Component: NumberInput // component not instanciated\r\n    },\r\n    {\r\n      key: \"MultiLineInput\",\r\n      name: \"toolbox.multilineinput.name\", // id of translation\r\n      questions,\r\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\r\n      icon: (\r\n        <Avatar>\r\n          <Icon component={multiLineInputIcon} />\r\n        </Avatar>\r\n      ), // this will go to Dom so can be string|| jsx component\r\n      field_name: \"multilineinput_\", // will add a generated uuidv4\r\n      Component: MultiLineInput // component not instanciated\r\n    },\r\n    {\r\n      key: \"Rate\",\r\n      name: \"toolbox.rate.name\", // id of translation\r\n      questions,\r\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\r\n      icon: <Avatar icon=\"star\" />, // this will go to Dom so can be string|| jsx component\r\n      field_name: \"rate_\", // will add a generated uuidv4\r\n      Component: Rate // component not instanciated\r\n    },\r\n    {\r\n      key: \"DatePicker\",\r\n      name: \"toolbox.datepicker.name\", // id of translation\r\n      questions,\r\n      // description: \"toolbox.textInput.description\", // desciption under input on toolbox\r\n      icon: <Avatar icon=\"calendar\" />, // this will go to Dom so can be string|| jsx component\r\n      field_name: \"datepicker_\", // will add a generated uuidv4\r\n      Component: DatePicker // component not instanciated\r\n    }\r\n  ];\r\n}\r\n\r\nexport default _defaultItems;\r\n","import { createContext } from \"react\";\r\nimport { MessagesRecord } from \"./translations/TranslatedText\";\r\nimport { IState } from \"./QuizzBuilder/reducer/reducer\";\r\nimport { IActions } from \"./QuizzBuilder/reducer/actions\";\r\nimport { defaultMessages } from \"./translations/TranslatedText\";\r\nimport defaulttoolBox from \"./ToolBox/index\";\r\n\r\ninterface IContextProps {\r\n  toolBox: Array<Object>;\r\n  language: string;\r\n  messages: MessagesRecord;\r\n}\r\n\r\nexport type IQuizzContext = IContextProps;\r\nexport type IQuizzBuilderContext = IContextProps & {\r\n  state: IState;\r\n  dispatch: (arg: IActions) => void;\r\n};\r\n\r\n// default context\r\nexport function getDefaultContext({\r\n  messages,\r\n  language,\r\n  toolBox,\r\n}: Partial<IContextProps>) {\r\n  return {\r\n    messages: messages || defaultMessages,\r\n    language: language || \"en\",\r\n    toolBox: toolBox || defaulttoolBox(),\r\n  };\r\n}\r\n\r\n/* Quiz context */\r\nconst QuizzContext = createContext<IQuizzContext | IQuizzBuilderContext>(\r\n  getDefaultContext({})\r\n);\r\n\r\nexport default QuizzContext;\r\n","import React, { useContext } from \"react\";\r\nimport QuizzContext, { IQuizzBuilderContext } from \"../QuizzContext\";\r\nimport List from \"antd/es/list/index\";\r\nimport { addElement } from \"./reducer/actions\";\r\nimport uuidV4 from \"uuid/v4\";\r\nimport TranslatedText from \"../translations/TranslatedText\";\r\n\r\nconst ListItem = List.Item;\r\nconst ListItemMeta = List.Item.Meta;\r\n\r\ninterface IinputData {\r\n  id: string;\r\n  element: string;\r\n  required: boolean;\r\n  questions: { [key: string]: any }; // @TODO CHANGE TO QUESTIONS TYPE\r\n  options?: { [key: string]: any }; // @TODO CHANGE TO OTIONS TYPE\r\n}\r\n\r\nexport default (/* props */) => {\r\n  const { dispatch, toolBox } = useContext(\r\n    QuizzContext\r\n  ) as IQuizzBuilderContext;\r\n\r\n  function onClickHandler(item: any) {\r\n    const elementOptions: IinputData = {\r\n      id: uuidV4(),\r\n      element: item.key,\r\n      required: false,\r\n      questions: item.questions\r\n    };\r\n\r\n    if (item.options) {\r\n      elementOptions[\"options\"] = item.options;\r\n    }\r\n\r\n    dispatch(addElement(elementOptions));\r\n  }\r\n\r\n  return (\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      style={{ margin: \"5px\" }}\r\n      dataSource={toolBox}\r\n      renderItem={(item: any) => (\r\n        <ListItem onClick={() => onClickHandler(item)}>\r\n          <ListItemMeta\r\n            avatar={item.icon}\r\n            title={<TranslatedText id={item.name} />}\r\n            description={\r\n              item.description ? <TranslatedText id={item.description} /> : null\r\n            }\r\n          />\r\n        </ListItem>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","export const addElement = (item: object) => {\r\n  return {\r\n    type: \"ADD_ELEMENT\",\r\n    item\r\n  } as const;\r\n};\r\n\r\nexport const patchElement = (id: string, newitem: Object) => {\r\n  return {\r\n    type: \"PATCH_ELEMENT\",\r\n    id,\r\n    newitem\r\n  } as const;\r\n};\r\n\r\nexport const deleteElement = (id: string) => {\r\n  return {\r\n    type: \"DELETE_ELEMENT\",\r\n    id\r\n  } as const;\r\n};\r\nexport type IActions = ReturnType<\r\n  typeof addElement | typeof deleteElement | typeof patchElement\r\n>;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"antd/es/button/index\";\r\nimport Popconfirm from \"antd/es/popconfirm/index\";\r\nimport { deleteElement } from \"../../reducer/actions\";\r\nimport QuizzContext, { IQuizzBuilderContext } from \"../../../QuizzContext\";\r\nimport TranslatedText from \"../../../translations/TranslatedText\";\r\n\r\n// applies delete and edit capabilities\r\nexport default (props: any) => {\r\n  const { dispatch } = useContext(QuizzContext) as IQuizzBuilderContext;\r\n\r\n  return (\r\n    <Popconfirm\r\n      arrowPointAtCenter\r\n      placement=\"bottom\"\r\n      onConfirm={() => dispatch(deleteElement(props.id))}\r\n      title={<TranslatedText id=\"confirm.action\" />}\r\n      okText={<TranslatedText id=\"btn.yes\" />}\r\n      cancelText={<TranslatedText id=\"btn.no\" />}\r\n    >\r\n      <Button type=\"danger\" icon=\"delete\" shape=\"circle\" />\r\n    </Popconfirm>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Button, { ButtonProps } from \"antd/es/button/index\";\r\n\r\n// applies delete and edit capabilities\r\nexport default (props: ButtonProps) => {\r\n  return <Button type=\"primary\" icon=\"edit\" shape=\"circle\" {...props} />;\r\n};\r\n","import React from \"react\";\r\nimport { Button, Col } from \"antd\";\r\nimport TranslatedText from \"../../translations/TranslatedText\";\r\n\r\n// applies delete and edit capabilities\r\nexport default (props: any) => {\r\n  const { onClose, onSubmit } = props;\r\n\r\n  return (\r\n    <Col\r\n      span={24}\r\n      style={{\r\n        textAlign: \"right\"\r\n      }}\r\n    >\r\n      <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n        <TranslatedText id=\"btn.cancel\" />\r\n      </Button>\r\n      <Button onClick={onSubmit} type=\"primary\">\r\n        <TranslatedText id=\"btn.save\" />\r\n      </Button>\r\n    </Col>\r\n  );\r\n};\r\n","import React, { memo } from \"react\";\r\nimport ISO6391 from \"iso-639-1\";\r\nimport { Dropdown, Button, Menu } from \"antd\";\r\nimport styles from \"../../../drawer.module.css\";\r\n\r\nconst { Item: MenuItem } = Menu;\r\nconst { getNativeName, getAllCodes } = ISO6391;\r\nconst ISO6391AllCodes = getAllCodes();\r\n\r\ninterface AddDropdownProps {\r\n  onChange?: (lnaguageCode: string) => void;\r\n  disabled?: string[];\r\n}\r\n\r\nfunction AddDropdown(props: AddDropdownProps) {\r\n  const { onChange, disabled } = props;\r\n\r\n  function onMenuItemClick({ key: lang }: any) {\r\n    if (onChange) {\r\n      onChange(lang);\r\n    }\r\n  }\r\n\r\n  const menu = (\r\n    <Menu onClick={onMenuItemClick}>\r\n      {ISO6391AllCodes.map(lang => (\r\n        <MenuItem\r\n          key={lang}\r\n          disabled={disabled ? disabled.includes(lang) : false}\r\n        >\r\n          {getNativeName(lang)}\r\n        </MenuItem>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown overlay={menu} overlayClassName={styles.dropdownLanguages}>\r\n      <Button icon=\"plus\" />\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default memo(AddDropdown);\r\n","import React, { forwardRef } from \"react\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport { Tabs, Tooltip, Row, Popconfirm, Button } from \"antd\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n// import \"./quillFormInput.css\";\r\nimport ISO6391 from \"iso-639-1\";\r\nimport AddDropdown from \"./AddDropdown\";\r\nimport TranslatedText from \"../../../../../../../../translations/TranslatedText\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { getNativeName } = ISO6391;\r\n\r\nconst Size = Quill.import(\"attributors/style/size\");\r\nconst text_size = [\r\n  \"6px\",\r\n  \"7px\",\r\n  \"8px\",\r\n  \"9px\",\r\n  \"10px\",\r\n  \"10.5px\",\r\n  \"11px\",\r\n  \"12px\",\r\n  \"13px\",\r\n  \"14px\",\r\n  \"15px\",\r\n  \"16px\",\r\n  \"18px\",\r\n  \"20px\",\r\n  \"22px\",\r\n  \"24px\",\r\n  \"26px\",\r\n  \"28px\",\r\n  \"32px\",\r\n  \"36px\",\r\n  \"40px\",\r\n  \"44px\",\r\n  \"48px\",\r\n  \"54px\",\r\n  \"60px\",\r\n  \"66px\",\r\n  \"72px\",\r\n  \"80px\",\r\n  \"88px\",\r\n  \"96px\",\r\n];\r\nSize.whitelist = text_size;\r\nQuill.register(Size, true);\r\n\r\nconst modules = {\r\n  toolbar: {\r\n    container: [\r\n      [{ header: [1, 2, false] }, { font: [] }, { size: text_size }],\r\n      [{ color: [] }, { background: [] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n      [\r\n        { list: \"ordered\" },\r\n        { list: \"bullet\" },\r\n        { indent: \"-1\" },\r\n        { indent: \"+1\" },\r\n      ],\r\n      [\"link\" /* 'image', 'video' */],\r\n      [\"clean\"],\r\n    ],\r\n  },\r\n};\r\n\r\nexport default forwardRef((props: any, ref) => {\r\n  const {\r\n    value,\r\n    defaultValue,\r\n    onChange,\r\n    currentLanguage,\r\n    setLanguage,\r\n    onNewLanguage,\r\n    onRemoveLanguage,\r\n  } = props;\r\n  const questionLanguages: Array<string> = Object.keys(value);\r\n\r\n  function onChangeHandler(\r\n    content: string\r\n    // delta: Quill.Delta,\r\n    //  source: Quill.Sources,\r\n    // editor: UnprivilegedEditor\r\n  ) {\r\n    onChange({ ...value, [currentLanguage]: content });\r\n  }\r\n\r\n  function preventPropagation(e?: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n    if (e) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  return (\r\n    <Tabs\r\n      ref={ref as any}\r\n      onChange={setLanguage}\r\n      activeKey={currentLanguage}\r\n      tabBarExtraContent={\r\n        <AddDropdown disabled={questionLanguages} onChange={onNewLanguage} />\r\n      }\r\n    >\r\n      {questionLanguages.map((lang) => (\r\n        <TabPane\r\n          // native language name\r\n          tab={\r\n            <Row>\r\n              <Tooltip title={lang}>{getNativeName(lang)}</Tooltip>\r\n              &nbsp;\r\n              {questionLanguages.length > 1 ? (\r\n                <Popconfirm\r\n                  title={<TranslatedText id=\"confirm.action\" />}\r\n                  okText={<TranslatedText id=\"btn.yes\" />}\r\n                  cancelText={<TranslatedText id=\"btn.no\" />}\r\n                  onConfirm={(e) => {\r\n                    preventPropagation(e);\r\n                    onRemoveLanguage(lang);\r\n                  }}\r\n                >\r\n                  <Button\r\n                    shape=\"circle\"\r\n                    icon=\"close\"\r\n                    size=\"small\"\r\n                    onClick={preventPropagation}\r\n                  />\r\n                </Popconfirm>\r\n              ) : null}\r\n            </Row>\r\n          }\r\n          key={lang}\r\n        >\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            placeholder=\"Question?\"\r\n            defaultValue={defaultValue}\r\n            value={value[currentLanguage] || \"\"}\r\n            onChange={onChangeHandler}\r\n            modules={modules}\r\n          />\r\n        </TabPane>\r\n      ))}\r\n    </Tabs>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport Icon from \"antd/es/icon\";\r\nimport Tooltip from \"antd/es/tooltip\";\r\n\r\nexport default ({ children, title }: any) => {\r\n  return (\r\n    <Tooltip title={title || \"empty\"}>\r\n      <Icon type=\"info-circle\" theme=\"twoTone\" />\r\n      &nbsp;\r\n      <span>{children}</span>\r\n    </Tooltip>\r\n  );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport BottomButtons from \"../../../../../../../../ReusableComponents/BottomButtons\";\r\nimport Button from \"antd/es/button/button\";\r\nimport Drawer from \"antd/es/drawer\";\r\nimport Input from \"antd/es/input/Input\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\nimport message from \"antd/es/message\";\r\nimport TextWithInfo from \"../../../../../../../../ReusableComponents/TextWithInfo\";\r\nimport ISO6391 from \"iso-639-1\";\r\nimport TranslatedText from \"../../../../../../../../translations/TranslatedText\";\r\n\r\nconst { getNativeName } = ISO6391;\r\n\r\nexport default ({ onAdd, languagesList, existingOptions }: any) => {\r\n  const [drawerVisibility, setDrawerVisibility] = useState(false);\r\n  const [newOption, setNewOption] = useState({ text: {} } as any);\r\n\r\n  // opens drawer when add button is clicked\r\n  function openDrawer() {\r\n    setDrawerVisibility(true);\r\n  }\r\n\r\n  // close drawer\r\n  function closeDrawer() {\r\n    setDrawerVisibility(false);\r\n  }\r\n\r\n  // on change input value | text\r\n  function onChangeInput(\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    language?: string\r\n  ) {\r\n    const tempNewOption = { ...newOption };\r\n\r\n    if (language) {\r\n      tempNewOption[\"text\"][language] = e.target.value;\r\n    } else {\r\n      tempNewOption[\"value\"] = e.target.value;\r\n    }\r\n    setNewOption(tempNewOption);\r\n  }\r\n\r\n  // save new added option\r\n  function onSaveOption() {\r\n    const newOptionValue = newOption[\"value\"];\r\n    const newOptionListText = Object.values(newOption[\"text\"]);\r\n\r\n    // check if value already exists (iterates over existing options)\r\n    for (let index = 0; index < existingOptions.length; index++) {\r\n      const currentOptionValue = existingOptions[index][\"value\"];\r\n      if (newOptionValue === currentOptionValue) {\r\n        // error message for already existing value (values must be unique by question)\r\n        return message.error(\"Value already exists\");\r\n      }\r\n    }\r\n\r\n    if (newOptionListText.length === languagesList.length) {\r\n      // sends new option back with text(on each language) and value\r\n      onAdd(newOption);\r\n      // closes this drawer\r\n      closeDrawer();\r\n    } else {\r\n      // error message for required languages\r\n      message.error(\"All fields are required\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button icon=\"plus\" onClick={openDrawer}>\r\n        <TranslatedText id=\"btn.add\" />\r\n      </Button>\r\n      <Drawer\r\n        title=\"Add New Option\"\r\n        width={150}\r\n        onClose={closeDrawer}\r\n        visible={drawerVisibility}\r\n        destroyOnClose\r\n      >\r\n        <FormItem label=\"Languages\">\r\n          {languagesList.map((language: string, i: number) => {\r\n            return (\r\n              <Fragment key={i}>\r\n                <TextWithInfo title={language}>\r\n                  {getNativeName(language)}\r\n                </TextWithInfo>\r\n                <Input onChange={e => onChangeInput(e, language)} />\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </FormItem>\r\n        <FormItem label=\"Value\">\r\n          <Input onChange={onChangeInput} />\r\n        </FormItem>\r\n        <BottomButtons onClose={closeDrawer} onSubmit={onSaveOption} />\r\n      </Drawer>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { forwardRef } from \"react\";\r\nimport Tabs from \"antd/es/tabs/index\";\r\nimport Row from \"antd/es/row/index\";\r\nimport Col from \"antd/es/col/index\";\r\nimport Input from \"antd/es/input/Input\";\r\nimport Button from \"antd/es/button/button\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\nimport TextWithInfo from \"../../../../../../../../ReusableComponents/TextWithInfo\";\r\nimport AddInputOption from \"./AddInputOption\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default forwardRef((props: any, ref) => {\r\n  const {\r\n    value,\r\n    onChange,\r\n    currentLanguage,\r\n    setLanguage,\r\n    languagesList\r\n  } = props;\r\n\r\n  // handles on change ofr text and value\r\n  function onChangeInput(index: number, content: string, language?: string) {\r\n    const valueClone = cloneDeep(value);\r\n    if (language) {\r\n      // language exists means its text editing\r\n      valueClone[index][\"text\"][language] = content;\r\n    } else {\r\n      // value editing\r\n      valueClone[index][\"value\"] = content;\r\n    }\r\n\r\n    onChange(valueClone);\r\n  }\r\n\r\n  // handles delete option\r\n  function onDelete(index: number) {\r\n    const valueClone = cloneDeep(value);\r\n    // removes provided index\r\n    valueClone.splice(index, 1);\r\n\r\n    onChange(valueClone);\r\n  }\r\n\r\n  // on add new option\r\n  function onAddOption(newOption: object) {\r\n    const valueClone = cloneDeep(value);\r\n    valueClone.push(newOption);\r\n\r\n    onChange(valueClone);\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Row>\r\n        <AddInputOption\r\n          existingOptions={value}\r\n          languagesList={languagesList}\r\n          onAdd={onAddOption}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <Col xs={24} sm={12}>\r\n          <TextWithInfo\r\n            title={\r\n              <>\r\n                <p>Each option can be translated</p>\r\n                <p>Current Language:&nbsp;{currentLanguage}</p>\r\n              </>\r\n            }\r\n          >\r\n            Text:\r\n          </TextWithInfo>\r\n          {/* Text options */}\r\n          <Tabs\r\n            onChange={setLanguage}\r\n            activeKey={currentLanguage}\r\n            renderTabBar={() => <div />}\r\n          >\r\n            {languagesList.map((language: string) => (\r\n              <TabPane tab={language} key={language}>\r\n                {value.map((option: any, i: number) => (\r\n                  <Input\r\n                    key={i}\r\n                    value={option.text[language]}\r\n                    onChange={e => onChangeInput(i, e.target.value, language)}\r\n                  />\r\n                ))}\r\n              </TabPane>\r\n            ))}\r\n          </Tabs>\r\n        </Col>\r\n        <Col xs={24} sm={12}>\r\n          <TextWithInfo title=\"Value is hidden from user, and its the same betwen languages\">\r\n            Value:\r\n          </TextWithInfo>\r\n\r\n          {/* VALUES ARE THE SAME BETWEEN LANGUAGES */}\r\n          {value.map((option: any, i: number) => (\r\n            <Row key={i}>\r\n              <Col span={20}>\r\n                <Input\r\n                  value={option.value}\r\n                  onChange={e => onChangeInput(i, e.target.value)}\r\n                />\r\n              </Col>\r\n              <Col style={{ textAlign: \"center\" }} span={4}>\r\n                {i > 0 ? (\r\n                  /* only show delete button if not first option */\r\n                  <Button\r\n                    type=\"danger\"\r\n                    icon=\"delete\"\r\n                    shape=\"circle\"\r\n                    onClick={() => onDelete(i)}\r\n                  />\r\n                ) : null}\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </Row>\r\n  );\r\n});\r\n","import React, { PureComponent } from \"react\";\r\nimport { FormComponentProps } from \"antd/lib/form/Form\";\r\nimport { Form, Checkbox } from \"antd\";\r\nimport QuillFormInput from \"./CustomFormInput/QuillFormInput\";\r\nimport TranslatedText from \"../../../../../../translations/TranslatedText\";\r\nimport OptionsInput from \"./CustomFormInput/OptionsInput/OptionsInput\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\n\r\n// this must be a class component because of parent components acessing the prop \"wrappedComponentRef\"\r\n// to be able to access form props and make a custom submit on parent for example.\r\ninterface DrawerFormProps extends FormComponentProps {\r\n  [k: string]: any;\r\n}\r\nclass DrawerForm extends PureComponent<DrawerFormProps, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    const languagesList = Object.keys(props.inputData.questions);\r\n\r\n    this.state = {\r\n      languagesList,\r\n      currentLanguage: languagesList[0]\r\n    };\r\n  }\r\n\r\n  setLanguage = (currentLanguage: any) => {\r\n    this.setState({ currentLanguage });\r\n  };\r\n\r\n  onNewLanguage = (lang: string) => {\r\n    const { form, inputData } = this.props;\r\n    const { setFieldsValue, getFieldsValue } = form;\r\n\r\n    const fieldsNames = [\"questions\"];\r\n    if (inputData.options) {\r\n      fieldsNames.push(\"options\");\r\n    }\r\n    const { questions, options } = cloneDeep(getFieldsValue(fieldsNames));\r\n    questions[lang] = \"\";\r\n\r\n    if (options) {\r\n      for (let index = 0; index < options.length; index++) {\r\n        options[index].text[lang] = \"\";\r\n      }\r\n    }\r\n\r\n    setFieldsValue({ questions, options });\r\n    this.setState({\r\n      languagesList: Object.keys(questions)\r\n    });\r\n  };\r\n\r\n  onRemoveLanguage = (lang: string) => {\r\n    /* REMOVE LANGUAGE HERE */\r\n    const { form, inputData } = this.props;\r\n    const { setFieldsValue, getFieldsValue } = form;\r\n\r\n    const fieldsNames = [\"questions\"];\r\n    if (inputData.options) {\r\n      fieldsNames.push(\"options\");\r\n    }\r\n    const { questions, options } = cloneDeep(getFieldsValue(fieldsNames));\r\n\r\n    delete questions[lang];\r\n\r\n    if (options) {\r\n      for (let index = 0; index < options.length; index++) {\r\n        delete options[index].text[lang];\r\n      }\r\n    }\r\n    const listLanguages = Object.keys(questions);\r\n\r\n    this.setState(\r\n      {\r\n        currentLanguage: listLanguages[0],\r\n        languagesList: listLanguages\r\n      },\r\n      () => {\r\n        // fix's bug that some times one of the updates was lost\r\n        setFieldsValue({ questions, options });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n        form,\r\n        // toolboxData,\r\n        inputData\r\n      } = this.props,\r\n      { currentLanguage, languagesList } = this.state,\r\n      { getFieldDecorator } = form,\r\n      { questions, required, options } = inputData;\r\n\r\n    return (\r\n      <Form layout=\"vertical\">\r\n        <Form.Item label={<TranslatedText id=\"settings.form.questions\" />}>\r\n          {getFieldDecorator(\"questions\", {\r\n            initialValue: questions,\r\n            rules: [{ required: true, message: \"Required field\" }]\r\n          })(\r\n            <QuillFormInput\r\n              currentLanguage={currentLanguage}\r\n              setLanguage={this.setLanguage}\r\n              onNewLanguage={this.onNewLanguage}\r\n              onRemoveLanguage={this.onRemoveLanguage}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        {options ? (\r\n          <Form.Item label={<TranslatedText id=\"settings.form.options\" />}>\r\n            {getFieldDecorator(\"options\", {\r\n              initialValue: options,\r\n              rules: [{ required: true, message: \"Required field\" }]\r\n            })(\r\n              <OptionsInput\r\n                languagesList={languagesList}\r\n                currentLanguage={currentLanguage}\r\n              />\r\n            )}\r\n          </Form.Item>\r\n        ) : null}\r\n\r\n        <Form.Item>\r\n          {getFieldDecorator(\"required\", {\r\n            initialValue: required,\r\n            valuePropName: \"checked\"\r\n          })(\r\n            <Checkbox>\r\n              <TranslatedText id=\"settings.form.required\" />\r\n            </Checkbox>\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<DrawerFormProps>()(DrawerForm);\r\n","import React, { useContext, useRef } from \"react\";\r\nimport { Drawer, Row } from \"antd\";\r\nimport BottomButtons from \"../../../../../ReusableComponents/BottomButtons\";\r\nimport SettingsForm from \"./SettingsForm/SettingsForm\";\r\nimport TranslatedText from \"../../../../../translations/TranslatedText\";\r\nimport QuizzContext, {\r\n  IQuizzBuilderContext\r\n} from \"../../../../../QuizzContext\";\r\nimport { patchElement } from \"../../../../reducer/actions\";\r\nimport styles from \"./drawer.module.css\";\r\n\r\n// applies delete and edit capabilities\r\nexport default function SettingsDrawer(props: any) {\r\n  const { closeDrawer, showDrawer, toolboxData, inputData } = props,\r\n    { dispatch } = useContext(QuizzContext) as IQuizzBuilderContext,\r\n    formRef = useRef() as any;\r\n\r\n  function onFormSubmit(e: Event) {\r\n    e.preventDefault();\r\n\r\n    // gets the form ref from child\r\n    const { validateFields } = formRef.current.props.form;\r\n    validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        // adds to reducer\r\n        dispatch(patchElement(inputData.id, values));\r\n        // close drawer had no errors\r\n        closeDrawer();\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      title={<TranslatedText id={toolboxData.name} />}\r\n      onClose={closeDrawer}\r\n      visible={showDrawer}\r\n      destroyOnClose\r\n      className={styles.settingsForm}\r\n    >\r\n      <Row style={{ height: \"90%\", overflowY: \"auto\" }}>\r\n        <SettingsForm\r\n          wrappedComponentRef={formRef}\r\n          toolboxData={toolboxData}\r\n          inputData={inputData}\r\n        />\r\n      </Row>\r\n      <Row\r\n        type=\"flex\"\r\n        justify=\"space-between\"\r\n        align=\"bottom\"\r\n        style={{ height: \"10%\" }}\r\n      >\r\n        <BottomButtons onClose={closeDrawer} onSubmit={onFormSubmit} />\r\n      </Row>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport EditButton from \"./EditButton\";\r\nimport SideDrawer from \"./SideDrawer/index\";\r\n\r\n// applies delete and edit capabilities\r\nexport default (props: any) => {\r\n  const [showDrawer, setShowDrawer] = useState(false);\r\n\r\n  function openDrawer() {\r\n    setShowDrawer(true);\r\n  }\r\n\r\n  function closeDrawer() {\r\n    setShowDrawer(false);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SideDrawer\r\n        {...props}\r\n        closeDrawer={closeDrawer}\r\n        showDrawer={showDrawer}\r\n      />\r\n      <EditButton onClick={openDrawer} />\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Row from \"antd/es/row/index\";\r\nimport Col from \"antd/es/col/index\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport EditElement from \"./EditElement/index\";\r\nimport TranslatedText from \"../../../translations/TranslatedText\";\r\n\r\n// applies delete and edit capabilities\r\nexport default (props: any) => {\r\n  const { toolboxData, inputData } = props;\r\n  return (\r\n    <div className=\"ElementWrapper\">\r\n      <Row>\r\n        <Col xs={24} sm={18}>\r\n          <TranslatedText id={toolboxData.name} />\r\n        </Col>\r\n        <Col xs={24} sm={6} style={{ textAlign: \"right\" }}>\r\n          <EditElement {...props} />\r\n          &nbsp;\r\n          <DeleteButton id={inputData.id} />\r\n        </Col>\r\n      </Row>\r\n      <Row>{props.children}</Row>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Empty from \"antd/es/empty/index\";\r\nimport Form from \"antd/es/form/index\";\r\nimport QuizzContext, { IQuizzBuilderContext } from \"../../QuizzContext\";\r\nimport ElementWrapper from \"./ElementWrapper/ElementWrapper\";\r\n\r\nfunction PreviewForm(props: any) {\r\n  const { state, toolBox, language } = useContext(\r\n      QuizzContext\r\n    ) as IQuizzBuilderContext,\r\n    { form } = props,\r\n    form_data = state.get(\"data\");\r\n\r\n  // shows the inputs from the toolbox that are added to the current builder state\r\n  return (\r\n    <Form>\r\n      {form_data.map((item: any) => {\r\n        const current_key = item.element;\r\n        // searchs for the current input on the toolbox to get the component\r\n        const found_toolbox_input = toolBox.find(\r\n          (toolBoxInput: any) => current_key === toolBoxInput.key\r\n        ) as any;\r\n        // finds input and wrapps it with delete and edit button\r\n        const Component = found_toolbox_input\r\n          ? found_toolbox_input.Component\r\n          : Empty;\r\n\r\n        return (\r\n          <ElementWrapper\r\n            // render the input wrapper with delete and edit button\r\n            toolboxData={found_toolbox_input}\r\n            inputData={item}\r\n            key={item.id}\r\n          >\r\n            <Component\r\n              // render the toolbox component\r\n              form={form}\r\n              toolboxData={found_toolbox_input}\r\n              inputData={item}\r\n              language={language}\r\n            />\r\n          </ElementWrapper>\r\n        );\r\n      })}\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Form.create()(PreviewForm);\r\n","import React, { useReducer, memo, useEffect } from \"react\";\r\nimport { reducer, initialState } from \"./reducer/reducer\";\r\nimport Row from \"antd/es/row/index\";\r\nimport Col from \"antd/es/col/index\";\r\nimport ToolBox from \"./ToolBoxContainer\";\r\nimport FormPreview from \"./FormPreview/FormPreview\";\r\nimport QuizzContext, { getDefaultContext } from \"../QuizzContext\";\r\nimport { usePrevious } from \"../customHooks\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport \"../assets/FormBuilder.css\";\r\n\r\nexport default memo(function(props: any) {\r\n  const { onChange, initialValue, ...rest } = props,\r\n    [state, dispatch] = useReducer(reducer, initialState(initialValue)),\r\n    contextValue = {\r\n      ...getDefaultContext(rest),\r\n      state,\r\n      dispatch\r\n    },\r\n    formData = state.get(\"data\");\r\n  const previousFormData = usePrevious(formData);\r\n\r\n  // effect to set\r\n  useEffect(() => {\r\n    // effect to notify parent that form data had a diff\r\n    if (\r\n      typeof onChange === \"function\" &&\r\n      previousFormData &&\r\n      !isEqual(previousFormData, formData)\r\n    ) {\r\n      onChange(formData);\r\n    }\r\n  }, [onChange, formData, previousFormData]);\r\n\r\n  // creates two colons 1 with toolbox and the other with the added inputs\r\n  return (\r\n    <div className=\"react-quizzes-builder\">\r\n      <QuizzContext.Provider value={contextValue}>\r\n        <Row style={{ height: \"100%\" }}>\r\n          <Col sm={6} xs={24} order={0}>\r\n            <ToolBox />\r\n          </Col>\r\n          <Col xs={24} sm={18} order={1} style={{ height: \"100%\" }}>\r\n            <FormPreview />\r\n          </Col>\r\n        </Row>\r\n      </QuizzContext.Provider>\r\n    </div>\r\n  );\r\n});\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const usePrevious = <T extends {}>(value: T) => {\r\n  const ref = useRef<T>();\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n  return ref.current;\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport QuizzContext, {\r\n  getDefaultContext,\r\n  IQuizzContext\r\n} from \"../QuizzContext\";\r\nimport TranslatedText from \"../translations/TranslatedText\";\r\nimport { Empty, Button, Form } from \"antd\";\r\n\r\nclass Quizz extends PureComponent<any, any> {\r\n  // submit handler\r\n  handleSubmit(e: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n    e.preventDefault();\r\n    const { onSubmit, form } = this.props;\r\n\r\n    form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        if (typeof onSubmit === \"function\") {\r\n          // sends values to parent if has onSubmit\r\n          onSubmit(values);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  static defaultProps = {\r\n    submitButton: true\r\n  };\r\n\r\n  render() {\r\n    const { form, data, submitButton, ...rest } = this.props,\r\n      contextValue = getDefaultContext(rest as IQuizzContext);\r\n    return (\r\n      <div className=\"react-quizzes-quizz\">\r\n        <QuizzContext.Provider value={contextValue}>\r\n          <Form className=\"react-quizzes-quizz\">\r\n            {data.map((item: any) => {\r\n              const current_key = item.element;\r\n              // searchs for the current input on the toolbox to get the component\r\n              const found_toolbox_input = contextValue[\"toolBox\"].find(\r\n                (toolBoxInput: any) => current_key === toolBoxInput.key\r\n              ) as any;\r\n              // finds input and wrapps it with delete and edit button\r\n              const Component = found_toolbox_input\r\n                ? found_toolbox_input.Component\r\n                : Empty;\r\n\r\n              return (\r\n                <Component\r\n                  // render the toolbox component\r\n                  key={item.id}\r\n                  form={form}\r\n                  toolboxData={found_toolbox_input}\r\n                  inputData={item}\r\n                  language={contextValue[\"language\"]}\r\n                />\r\n              );\r\n            })}\r\n            {submitButton ? (\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  onClick={this.handleSubmit.bind(this)}\r\n                >\r\n                  <TranslatedText id=\"btn.submit\" />\r\n                </Button>\r\n              </Form.Item>\r\n            ) : null}\r\n          </Form>\r\n        </QuizzContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<any>()(Quizz);\r\n","import { Modal, Button } from \"antd\";\r\nimport React, { useState, Fragment } from \"react\";\r\nimport { Quiz } from \"./App\";\r\n\r\nexport default function (props: any) {\r\n  const [modalVisibility, setModalVisibility] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button onClick={() => setModalVisibility(true)}>Preview Form</Button>\r\n      <Modal\r\n        title=\"Preview Form\"\r\n        style={{ top: 20 }}\r\n        visible={modalVisibility}\r\n        onCancel={() => setModalVisibility(false)}\r\n        destroyOnClose\r\n      >\r\n        <Quiz\r\n          data={props.data}\r\n          onSubmit={(values: any) => console.log(\"form submit values\", values)}\r\n        />\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QuizzBuilder } from \"./App\";\r\nimport QuizExample from \"./QuizExample\";\r\nimport \"./assets/antd.css\";\r\n\r\nfunction App() {\r\n  const [formdata, setFormData] = useState([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <QuizExample data={formdata} />\r\n      <QuizzBuilder onChange={setFormData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}